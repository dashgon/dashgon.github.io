{"version":3,"sources":["api/firebase.ts","features/auth/authSlice.ts","features/msgs/msgsSlice.ts","api/dataAPI.ts","features/users/usersSlice.ts","app/store.ts","api/authAPI.ts","app/AuthContext.tsx","app/darkThemeCtx.tsx","ui/AuthRoute.tsx","utils/util.ts","utils/svg.tsx","ui/ui.tsx","features/auth/AuthForms.tsx","utils/useLocalStorage.ts","ui/layout/UserMenu.tsx","ui/toggleDark.tsx","ui/layout/Navbar.tsx","ui/forms.tsx","features/auth/AuthPage.tsx","ui/LikeButton.tsx","features/dash/Dashboard.tsx","features/cal/Calendar.tsx","features/timeline/Timeline.tsx","features/chat/chat-gadgets.tsx","features/chat/LeftPane.tsx","features/chat/RightPane.tsx","features/chat/ChatBubble.tsx","features/chat/ChatInput.tsx","features/chat/ChatPane.tsx","features/chat/Chat.tsx","features/profile/ProfilePage.tsx","features/setting/SettingPage.tsx","ui/layout/Layout.tsx","app/App.tsx","reportWebVitals.ts","index.tsx"],"names":["firebase","apps","length","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","apiReq","createAsyncThunk","ap","a","console","log","authAPI","authSlice","createSlice","name","initialState","user","pending","reducers","stateChanged","state","action","payload","error","undefined","extraReducers","builder","addCase","fulfilled","rejected","code","message","actions","selectAuth","auth","msgsAdapter","createEntityAdapter","selectId","msg","id","sortComparer","b","time","getInitialState","status","roomId","sendMsg","store","getState","msgs","addMsgAPI","msgsSlice","enterRoom","msgAddOne","addOne","msgUpsertOne","upsertOne","msgSetAll","setAll","msgRemoveOne","removeOne","msgRemoveAll","removeAll","_action","getSelectors","selectAllMsgs","selectAll","selectRoomId","selectById","selectIds","fetchUserAPI","uid","db","firestore","Promise","resolve","reject","collection","doc","get","then","exists","data","email","photoURL","group","city","profile","backURL","catch","createUserAPI","set","createdAt","FieldValue","serverTimestamp","merge","extractMsg","sender","seconds","text","img","collectionPathFromRoomId","roomid","msgsRef","add","docRef","usersAdapter","fetchUser","createUser","usersSlice","userAdded","userRemoved","updateUser","emsg","e","_state","alert","users","selectUserById","configureStore","reducer","authReducer","usersReducer","msgsReducer","useAppDispatch","useDispatch","extractUser","au","displayName","command","pwd","promise","signOut","sendEmailVerification","createUserWithEmailAndPassword","signInWithEmailAndPassword","provider","GoogleAuthProvider","addScope","signInWithRedirect","getRedirectResult","signInWithPopup","res","err","currentUser","AuthContext","createContext","useAuthCtx","useContext","AuthProvider","children","dispatch","useSelector","useEffect","unsubscribe","onAuthStateChanged","fu","useAuthStateChanged","Provider","value","DarkThemeContext","dark","darkMode","media","night","toggle","matchMediaDark","window","matchMedia","DarkThemeProvider","ITEM_THEME","EV_CHANGE","modeName","isDark","useState","setDark","setMedia","setNight","applyDarkMode","useCallback","dk","save","mode","applyTheme","localStorage","setItem","useLayoutEffect","isMediaMode","handleMediaChange","matches","mediaNight","getItem","addEventListener","removeEventListener","document","getElementsByTagName","style","cssText","themeCSSVars","join","classMode","removeItem","className","light","ARoute","access","authLv","rest","render","location","to","pathname","from","useFromPath","useLocation","AuthRedirectToFrom","fromPath","cC","c_base","cnd_if","c_then","c_else","cCo","cC0o","cL","clss","reduce","cum","cLo","lZ","n","toString","timeStr","d","dt","Date","getHours","getMinutes","getPathD","k","PATHD","pathRules","fillRule","clipRule","viewBox","vLen","squareView","len","width","height","Svg6v24","stroke","fill","strokeWidth","strokeLinecap","strokeLinejoin","ButtonPurple","props","cn","useClose","hideAttr","close","setClose","handleClose","hide","IconButton","kind","onClick","colors","ok","warn","info","role","SpinningCircle","xmlns","cx","cy","r","EmailForm","setEmail","setPwd","setSave","signup","setSignup","updateLSEmailPwd","SECRET_KEY","ITEM_EMAIL","ITEM_PASS","ls_email","ls_pass","CryptoAES","decrypt","CryptoENC","encrypt","useLSEmailPwd","onSubmit","ev","test","preventDefault","onFormSubmit","placeholder","onChange","target","iconPath","type","checked","label","classLabel","InputText","LabeledCheckbox","htmlFor","AuthForms","cloGoogleBtn","src","alt","LogoutForm","url","LogoutButton","MENU_SIGNOUT","USER_MENUITEMS","title","ProfileImg","UserMenu","aria-label","aria-haspopup","popup","accessLv","UserMenuListPulldown","UserMenuList","aria-orientation","aria-labelledby","filter","map","m","i","exact","activeStyle","pointerEvents","fontStyle","color","MenuCommands","ToggleSlider","on","srOnly","size","disabled","sz","sm","slide","ball","dx","md","lg","tabIndex","aria-checked","transformOrigin","ToggleDarkButton","stopCls","x1","y1","x2","y2","gradientUnits","stopColor","offset","MenuLinks","tcsBgBorder","tcsTextFocus","tcsText","MainMenuList","mobile","onMenuItemClick","textDecoration","opacity","LogoButton","SideArrowButton","NotiIconButton","BurgerButton","isOn","Navbar","mobileMenuOn","setMobileMenuOn","forDesktop","forMobile","_e","ErrorDlg","content","IconDialog","colorsBack","PendingDlg","SpacetimeQText","AuthPage","LikeButton","transform","PostItem","avatar","author","likes","comments","cntLike","setCntLike","cntCmt","setCntCmt","href","Dashboard","POST_DATA","pd","tcsBorder","CalTHead","week","attr","wk","substr","CalTBody","WeekRow","aDI","di","date","evList","j","EventNote","event","cat","palette","ButtonArrow","dir","angle","Calendar","month","setMonth","mTest","Math","abs","TimelineItem","pos","clrSet","fg","bg","Timeline","left","TIMELINE_DATA","td","borderColor","idx","BORDER_COLOR_LIST","AvatarImg","show","bdrClr","SvgIcon","path","SvgIconWrite","SvgIconPlusCircle","SvgIconPhone","SvgIconCamcoder","SvgIconInfo","SvgIconReply","SvgIconSmile","SvgIconPicture","LeftPaneHead","RoomUsersList","CONTEXTMENU","ref","useRef","handleContextMenu","el","current","u","timestamp","RoomsList","curRoomId","rm","LeftPane","ProfileView","urlDest","icon","menu","pf","RightPane","ChatReactions","ButtonResponse","ChatBubble","idSelf","isNewId","rel","dateTime","toISOString","ChatInputControl","noCompo","setNoCompo","hasText","setHasText","refEd","btnCls","_sendText","node","txt","textContent","innerHTML","contentEditable","onCompositionStart","onCompositionEnd","onKeyDown","key","shiftKey","submitText","onKeyUp","ChatHead","linkedIcons","li","ChatBody","refW","scrollTop","scrollHeight","idPrev","includes","substring","ChatPane","ChatMainWindow","query","orderBy","limit","amsg","bFirst","onSnapshot","snapshot","forEach","metadata","hasPendingWrites","push","docChanges","change","useMsgsRoom","hidden_col","Register","timeUMTtoLocal","umt","format","formatDistanceToNow","ProfilePage","cUser","ux","emailVerified","fontSize","Intl","DateTimeFormat","resolvedOptions","timeZone","creationTime","lastSignInTime","providerData","providerId","ButtonEmailVerificaiton","DisplayName","SettingPage","Layout","Routes","rt","cookie","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.75b75d65.chunk.js","sourcesContent":["/*=============================================================================\n firebase.ts - Firebase access\n\n (C) 2020 Soomin K., SpacetimeQ INC.\n=============================================================================*/\n// May 27, 2020 by Soomin K.\n// import * as firebase from \"firebase/app\";\nimport firebase from \"firebase/app\";  // after 8.0.0\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nconst firebaseConfig = {  // Load from .env (restart yarn for changes)\n  apiKey:            process.env.REACT_APP_API_KEY,\n  authDomain:        process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL:       process.env.REACT_APP_DATABASE_URL,\n  projectId:         process.env.REACT_APP_PROJECT_ID,\n  storageBucket:     process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId:             process.env.REACT_APP_ID,\n  measurementId:     process.env.REACT_APP_MEASUREMENT_ID\n};\n\nif (firebase.apps.length === 0)\n  firebase.initializeApp(firebaseConfig);\nif (!process.env.NODE_ENV ||\n     process.env.NODE_ENV === 'development') {\n  console.log(firebase.app().name);\n  console.log(process.env.NODE_ENV);\n  console.log(process.env.REACT_APP_API_KEY);\n}\n\nexport default firebase;\n/*\n * Test accounts:\n * soomin999@gmail.com/!139Ocean (Email auth)\n * soomin@spacetimeq.com/!139Ocean (Email auth)\n */\n","/*=============================================================================\n authSlice.ts - authentication data\n\n (C) 2020 SpacetimeQ INC.\n=============================================================================*/\nimport {\n  createSlice,\n  createAsyncThunk,\n  PayloadAction,\n} from '@reduxjs/toolkit';\nimport { TRootState, } from 'app/store';\nimport {\n  TAPIError,\n  authAPI,\n  TAuthProps,\n} from 'api/authAPI';\nimport {\n  TUser0\n} from 'common';\n\nexport interface IAuthState {\n  user:     TUser0;\n  pending:  boolean;\n  error?:   TAPIError;\n};\n\n// Login Request\nexport const apiReq = createAsyncThunk<\n  TUser0,     // Return type    of the payloadCreator\n  TAuthProps  // First argument to the payloadCreator\n>('auth/apiReq',               // type\n  async (ap: TAuthProps) => {  // payloadCreator\n    console.log(\"apiReq:\", ap);\n    return await authAPI(ap);  // calls API wrapper\n  }\n);\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState: {\n    user:    null,\n    pending: false,\n  } as IAuthState,\n  reducers: {\n    stateChanged(state, action: PayloadAction<TUser0>) {\n      state.user    = action.payload;\n      state.pending = false;\n      state.error   = undefined;\n    }\n  },\n  extraReducers: builder => {\n    builder\n    .addCase(apiReq.pending, (state) => {\n      state.pending = true;\n      state.error   = undefined;\n    })\n    .addCase(apiReq.fulfilled, (state) => {\n      // state.user = action.payload;  // let it be handled on stateChanged\n      state.pending = false;\n    })\n    .addCase(apiReq.rejected, (state, action) => {\n      state.pending = false;\n      state.error = action.error as TAPIError;\n      console.error(\"Login Error:\", action.error.code, action.error.message);\n    })\n  }\n});\n\nexport default authSlice.reducer;\n\nexport const {\n  stateChanged\n} = authSlice.actions;\nexport const selectAuth = (state: TRootState) => state.auth;\n","/*=============================================================================\n msgsSlice.ts - messages data\n\n - 'msgs' is a subcollection under the rooms(sessions) Collection\n - fetching all msgs are done by dataAPI.ts/useMsgCollection (subcribing to the Firebase)\n\n (C) 2020 SpacetimeQ INC.\n=============================================================================*/\nimport {\n  createSlice,\n  createAsyncThunk,\n  createEntityAdapter,\n} from '@reduxjs/toolkit';\nimport { TRootState } from 'app/store';\nimport {\n  IMsg,\n  IMsgSend\n} from 'common';\nimport {\n  addMsgAPI\n} from 'api/dataAPI';\nimport { store } from 'app/store';\n\nconst msgsAdapter = createEntityAdapter<IMsg>({\n  selectId: msg => msg.id,  // default behavior\n  sortComparer: (a, b) => (b.time < a.time) ? 1 : ((b.time > a.time) ? -1 : 0)  // ascending order\n});\n\nconst initialState = msgsAdapter.getInitialState({\n  status: 'idle',\n  error: '',\n  roomId: '',\n});\n\n// For the context where useSelector(selectRoomId) cannot be used.\nconst getRoomId = () => store.getState().msgs.roomId;\n\n// create User by id (document id = user.uid)\nexport const sendMsg = createAsyncThunk<\n  void,      // Return type    of the payloadCreator\n  IMsgSend   // First argument to the payloadCreator\n>(\n  'msgs/sendMsg',  // type\n  async (msg: IMsgSend) => {  // payloadCreator\n    console.log(\"sendMsg:\", msg);  // Can't use useSelector hook since it's not a React function component,\n    const roomId = getRoomId();\n    // if (!roomId)\n    //   return;\n    return await addMsgAPI(roomId, msg); // ******************* API call\n  }\n);\n\nconst msgsSlice = createSlice({\n  name: 'msgs',\n  initialState,\n  reducers: {\n    enterRoom(state, action) {\n      state.roomId = action.payload;\n    },\n    msgAddOne:    msgsAdapter.addOne,\n    msgUpsertOne: msgsAdapter.upsertOne,\n    msgSetAll:    msgsAdapter.setAll,\n    msgRemoveOne: msgsAdapter.removeOne,\n    msgRemoveAll: msgsAdapter.removeAll,\n    // sendMsg(state, action) {\n    //   msgsAdapter.addOne(state, action);\n    // },\n  },\n  extraReducers: builder => {\n    builder\n    .addCase(sendMsg.fulfilled, (state, _action) => {\n      state.status = 'succeeded';  // update data will be received later\n    })\n    .addCase(sendMsg.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.error.message || \"sendMsg error!\";\n    })\n  }\n});\n\nexport default msgsSlice.reducer;\nexport const {\n  enterRoom,\n  msgAddOne,\n  msgUpsertOne,\n  msgSetAll,\n  msgRemoveOne,\n  msgRemoveAll,\n} = msgsSlice.actions;\n\nexport const {\n  selectAll:  selectAllMsgs,\n  selectById: selectMsgById,\n  selectIds:  selectMsgIds,\n} = msgsAdapter.getSelectors((state: TRootState) => state.msgs);\nexport const selectMsgStatus = (state: TRootState) => state.msgs.status;\nexport const selectRoomId    = (state: TRootState) => state.msgs.roomId;\n","/*=============================================================================\n dataAPI.ts - database APIs abstraction layer\n\n - Current: Encapsulation of Firebase Cloud Firestore data access APIs\n - Any database dependent API code should come under api/ directory.\n   Other application specific codes need to be separated from the backend API codes.\n - Let the work of transporting from Firebase Cloud Firestore to MongoDB be easy.\n\n (C) 2020 SpacetimeQ INC.\n=============================================================================*/\nimport { useEffect } from 'react';\nimport firebase  from 'api/firebase';\nimport {\n  useAppDispatch,\n} from 'app/store';\nimport { useSelector } from 'react-redux';\nimport {\n  IUser,\n  IUserEx,\n  IMsgSend,\n  IMsg,\n} from 'common';\nimport {\n  selectRoomId,\n  selectAllMsgs,\n  msgSetAll,\n  msgUpsertOne,\n  msgRemoveOne,\n} from 'features/msgs/msgsSlice';\n\nexport type TAPIError = firebase.auth.Error;\n\nexport const fetchUserAPI = (uid: string): Promise<IUserEx> => {\n  const db = firebase.firestore();\n  return new Promise<IUserEx>((resolve, reject) => {\n    db.collection(\"users\").doc(uid)\n      .get()\n      .then(doc => {\n        if (doc.exists) {\n          const data = doc.data(); // exclude non-serializables\n          console.log(doc.id, \" => \", data);\n          if (data) {\n            resolve({\n              uid,\n              email:    data.email,\n              name:     data.name,\n              photoURL: data.photoURL,\n              group:    data.group,\n              city:     data.city,\n              profile:  data.profile,\n              backURL:  data.backURL,\n            });\n          } else {\n            reject({\n              code: \"fetchUserAPI\",\n              message: \"Null data\"\n            });\n          }\n        } else {\n          console.error(\"Document not exist: users/\", uid);\n          // create user doc here\n          reject({\n            code: \"fetchUserAPI\",\n            message: \"No user document!\"\n          });\n        }\n      })\n      .catch(error => {\n        console.error(\"Error getting document:\", error);\n        reject(error);\n      });\n    });\n}\n\nexport const createUserAPI = (user: IUser): Promise<IUserEx> => {\n  const db = firebase.firestore();\n  const data = {\n    email:    user.email,\n    name:     user.name,\n    photoURL: user.photoURL,\n    group:    \"group\",\n    city:     \"city\",\n    profile:  \"profile\",\n    backURL:  \"osanbashi.jpg\",\n  };\n  return new Promise<IUserEx>((resolve, reject) => {\n    db.collection(\"users\").doc(user.uid)\n      .set({\n        createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n        ...data\n      }, { merge: true })\n      .then(() => {\n        console.log(\"Document successfully written:\", user.uid);\n        resolve({ uid: user.uid, ...data });\n      })\n      .catch(error => {\n        console.error(\"Error writing document:\", error);\n        reject(error);\n      });\n    });\n}\n\nconst extractMsg = (doc: firebase.firestore.QueryDocumentSnapshot) => {\n  return ({\n    id:     doc.id,\n    sender: doc.data().sender,\n    time:   doc.data().time && (doc.data().time.seconds * 1000),  // serializable\n    text:   doc.data().text,\n    img:    doc.data().img && doc.data().img,\n  });\n}\n\nconst collectionPathFromRoomId = (roomId: string) => `rooms/${roomId}/msgs`;\n\n// Subscribe to the msgs Collection: path \"rooms/{roomId}/msgs\"\n// Local writes in your app will invoke snapshot listeners immediately. (\"latency compensation\")\n// -> filter out duplicate addition: the local fire comes with no serverTimestamp.\nexport const useMsgsRoom = () => {\n  const dispatch = useAppDispatch();\n  const msgs   = useSelector(selectAllMsgs);\n  const roomId = useSelector(selectRoomId);\n\n  useEffect(() => {\n    if (!roomId)\n      return;\n    const db = firebase.firestore();\n    const msgsRef = db.collection(collectionPathFromRoomId(roomId));\n    const query = msgsRef.orderBy(\"time\", \"desc\").limit(200);\n    const amsg: IMsg[] = [];\n    let bFirst = true;\n    const unsubscribe = query.onSnapshot(snapshot => {  // firebase.firestore.QuerySnapshot\n      if (bFirst) {\n        snapshot.forEach(doc => {\n          if (!doc.metadata.hasPendingWrites)  // not \"Local\", from \"Server\"\n            amsg.push( extractMsg(doc) );\n        });\n        bFirst = false;\n        if (amsg.length > 0) {\n          dispatch( msgSetAll(amsg) );  // fetch all msgs\n        }\n      } else {\n        snapshot.docChanges().forEach(change => {\n          switch (change.type) {\n            case \"added\":\n            case \"modified\":\n              if (!change.doc.metadata.hasPendingWrites)\n                dispatch( msgUpsertOne( extractMsg(change.doc) ) );\n              break;\n            case \"removed\" :\n              dispatch( msgRemoveOne(change.doc.id));\n              break;\n            default: console.error(change.type, \" not covered!\");\n          }\n          console.log(change.type, change.doc.id);\n        });\n      }\n    }, error => {\n      console.error(\"useCollectionData:\", error);\n    });\n    console.log(\"🍎 subscribed to the Firebase collection\");\n    return () => {\n      unsubscribe();\n      console.log(\"🍏 unsubscribed Firebase collection\");\n    }\n  }, [roomId, dispatch]);\n\n  return msgs;\n}\n\n// There are two ways to create a new document in the Firestore\n// 1. db.collection('room-id').doc('msg-id').set(data)\n// 2. db.collection('room-id').add(data)  with a generated id\n//   returns document id\nexport const addMsgAPI = (roomid: string, msg: IMsgSend): Promise<void> => {\n  const db = firebase.firestore();\n  const msgsRef = db.collection(collectionPathFromRoomId(roomid));\n  return new Promise<void>((resolve, reject) =>\n    msgsRef.add({\n      time: firebase.firestore.FieldValue.serverTimestamp(),\n      ...msg\n    })\n    .then(docRef => {\n      console.log(\"msg sent:\", docRef.id);\n      resolve();\n    })\n    .catch(error => reject(error))\n  );\n}\n\nexport const sendMsgTest = async ({ sender, text }: {\n  sender: string,\n  text:   string,\n}) => {\n  const db = firebase.firestore();\n  const msgsRef = db.collection(\"rooms/tprYAJxY2blNg1X1cT5z/msgs\");\n  await msgsRef.add({\n    sender,\n    time: firebase.firestore.FieldValue.serverTimestamp(),\n    text,\n  });\n}\n\n/*\nexport const dbTest = (user: IUser) => {\n  const db = firebase.firestore();\n  db.collection(\"users\").doc(user.uid)\n    .set({\n      email:    user.email,\n      name:     user.name,\n      photoURL: user.photoURL,\n      group:    \"SpacetimeQ\",\n      city:     \"Yokohama, Japan\",\n      profile:  \"便利屋@WeWork Ocean Gate 横浜みなとみらい 紅\",\n      backURL:  \"osanbashi.jpg\",\n    }, { merge: true })\n    .then(() => {\n      console.log(\"Document successfully written:\", user.uid);\n    })\n    .catch(error => {\n      console.error(\"Error writing document:\", error);\n    });\n}\n*/\n","/*=============================================================================\n usersSlice.ts - users data\n\n (C) 2020 SpacetimeQ INC.\n=============================================================================*/\nimport {\n  createSlice,\n  createAsyncThunk,\n  createEntityAdapter,\n  SerializedError,\n} from '@reduxjs/toolkit';\nimport { TRootState } from 'app/store';\nimport {\n  IUser,\n  IUserEx,\n} from 'common';\nimport {\n  fetchUserAPI,\n  createUserAPI,\n} from 'api/dataAPI';\n\nconst usersAdapter = createEntityAdapter<IUserEx>({\n  selectId: user => user.uid,  // ID is other than user.id\n});\n\n// fetch User info by id (document id = user.uid)\nexport const fetchUser = createAsyncThunk<\n  IUserEx,  // Return type    of the payloadCreator\n  string    // First argument to the payloadCreator\n>('users/fetchUser',        // type\n  async (uid: string) => {  // payloadCreator\n    console.log(\"fetchUser:\", uid);\n    return await fetchUserAPI(uid); // ******************* API call\n  }\n);\n\n// create User by id (document id = user.uid)\nexport const createUser = createAsyncThunk<\n  IUserEx,  // Return type    of the payloadCreator\n  IUser     // First argument to the payloadCreator\n>(\n  'users/createUser',  // type\n  async (user: IUser) => {  // payloadCreator\n    console.log(\"createUser:\", user);\n    return await createUserAPI(user); // ******************* API call\n  }\n);\n\nconst usersSlice = createSlice({\n  name: 'users',\n  initialState: usersAdapter.getInitialState(),\n  reducers: {\n    userAdded:   usersAdapter.addOne,\n    userRemoved: usersAdapter.removeOne,\n    updateUser(state, action) {\n      usersAdapter.upsertOne(state, action);\n    },\n  },\n  extraReducers: builder => {\n    const emsg = (e: SerializedError) => e.code + \" : \" + e.message;\n    builder\n    // fetchUser ----------------------------------------------\n    .addCase(fetchUser.fulfilled, (state, action) => { usersAdapter.addOne(state, action); })\n    .addCase(fetchUser.rejected, (_state, action) => { console.error(emsg(action.error)); })\n    // createUser ---------------------------------------------\n    .addCase(createUser.fulfilled, (state, action) => { usersAdapter.addOne(state, action); })\n    .addCase(createUser.rejected, (_state, action) => { alert(emsg(action.error)); })\n  }\n});\n\nexport default usersSlice.reducer;\n\nexport const {\n  userAdded,\n  userRemoved,\n  updateUser\n} = usersSlice.actions;\n\nexport const {\n  selectAll:  selectAllUsers,\n  selectById: selectUserById,\n  selectIds:  selectUserIds\n} = usersAdapter.getSelectors((state: TRootState) => state.users);\n","/*=============================================================================\n store.ts - Redux store, single source of truth\n\n (C) 2020 SpacetimeQ INC.\n=============================================================================*/\nimport { useDispatch }    from 'react-redux';\nimport { configureStore } from '@reduxjs/toolkit';\nimport authReducer        from 'features/auth/authSlice';\nimport usersReducer       from 'features/users/usersSlice';\nimport msgsReducer        from 'features/msgs/msgsSlice';\n\nexport const store = configureStore({\n  reducer: {\n    auth:  authReducer,\n    users: usersReducer,\n    msgs:  msgsReducer,\n  }\n});\n\nexport type TRootState = ReturnType<typeof store.getState>;\nexport const useAppDispatch = () => useDispatch<typeof store.dispatch>();\n\n","/*=============================================================================\n authAPI - authentication APIs abstraction layer\n         - make the application including reducrers be decoupled from the firebase API details\n\n *** Check out common patterns in the auth function calls:\n firebase.auth().\n   signInWithEmailAndPassword    (email: string, password: string): Promise<UserCredential>;\n   createUserWithEmailAndPassword(email: string, password: string): Promise<UserCredential>;\n   GoogleAuthProvider implements firebase.auth.AuthProvider\n   signInWithCredential          (credential: AuthCredential):      Promise<UserCredential>;\n   signInWithPopup               (provider: AuthProvider):          Promise<UserCredential>;\n   signInWithRedirect            (provider: AuthProvider):          Promise<void>;\n   getRedirectResult             ():                                Promise<UserCredential>;\n   onAuthStateChanged(\n     nextOrObserver: Observer<any> | ((a: User | null) => any),\n     error?:         (a: Error) => any,\n     completed?:     firebase.Unsubscribe\n   ): firebase.Unsubscribe;\n   singOut(): Promise<void>;\n   \n UserCredential: {\n   additionalUserInfo?: AdditionalUserInfo | null;\n   credential:          AuthCredential     | null;\n   operationType?:      string             | null;  // 'signIn', 'link', 'reauthenticate'\n   user:                User               | null\n }\n\n firebase.User\n firebase.auth.Error { code: string, message: string }\n firebase.auth.AuthCredential {\n   providerId:    string;  // 'google.com', 'facebook.com'\n   signInMethod:  string;  // 'password', 'emailLink'\n   toJSON():      Object;\n   fromJSON(json: Object | string): AuthCredential | null;\n }\n\n (C) 2020 SpacetimeQ INC.\n=============================================================================*/\nimport { useEffect } from 'react';\nimport firebase  from 'api/firebase';\nimport { TUser0 } from 'common';\nimport {\n  useAppDispatch,\n} from 'app/store';\nimport { useSelector } from 'react-redux';\nimport {\n  stateChanged,\n  selectAuth\n} from 'features/auth/authSlice';\nimport {\n  fetchUser\n} from 'features/users/usersSlice';\n\nexport type TAPIError = firebase.auth.Error;\nexport type TAPIUser = Nullable<firebase.User>;\n//type TUserCredential = firebase.auth.UserCredential | void;\nexport type TAuthProps = {  // Command and Arguments required to call firebase APIs\n  command: 'signInEmail'\n         | 'createUser'\n         | 'signInGoogle'\n         | 'signInGoogleR'\n         | 'signOut'\n         | 'sendEmailVerification';\n  email?:  string;\n  pwd?:    string;\n};\n\n// wrapper for firebase.auth().onAuthStateChanged()\n// 1. abstract away firebase dependency\n// 2. extract user fields (take only serializable parts for the redux)\nexport const useAuthStateChanged = () => {\n  const dispatch = useAppDispatch();     // dispatch is stable and won't change on re-renders\n  const auth = useSelector(selectAuth);  // Hook that will reflect the changes\n\n  useEffect(() => {  // When the page reloaded, this will reflect the current login state\n    // The observer is only triggered on sign-in or sign-out.\n    const unsubscribe = firebase.auth().onAuthStateChanged(fu => {\n      const user = extractUser(fu);\n      console.log(\"onAuthStateChanged:\", fu || \"sign-out\");\n      dispatch( stateChanged(user) );\n      if (user) {\n        dispatch( fetchUser(user.uid) );\n      }\n    });\n    console.log(\"🍎 subscribed to the Firebase onAuthStateChanged()\");\n    return () => {\n      unsubscribe();\n      console.log(\"🍏 unsubscribed Firebase onAuthStateChanged()\");\n    }\n  }, [dispatch]);\n\n  return auth;\n}\n\nconst extractUser = (au: TAPIUser): TUser0 => {\n  return au\n    ? ({\n      uid:      au.uid,\n      email:    au.email,\n      name:     au.displayName,\n      photoURL: au.photoURL\n    })\n    : null;\n}\n\n// wraps firebase APIs with command string and\n// extracts some fields from the firebase.User result.\n// Actually user data is retrived at onAuthStateChanged, no need to return user here.\n// To abstract away firebase auth functions that return UserCredential\n// - They are not serializable and hard to be handled within the reducers\nexport function authAPI({\n  command,  // singOut, createUser, signInEmail, signInGoogle, ...\n  email,    // required for signIn or createUser\n  pwd       // password\n}: TAuthProps): Promise<TUser0> {\n  const auth = firebase.auth();\n  return new Promise<TUser0>((resolve, reject) => {\n    let promise: Promise<firebase.auth.UserCredential>;\n    switch (command) {\n      // ------------------------------------------------------------------------\n      // APIs that return Promise<void>\n      // ------------------------------------------------------------------------\n      case 'signOut':\n        auth.signOut();\n        return resolve(null);\n      case 'sendEmailVerification':\n        sendEmailVerification();\n        return resolve(null);\n      // ------------------------------------------------------------------------\n      // APIs that return Promise<firebase.auth.UserCredential>\n      // ------------------------------------------------------------------------\n      case 'createUser':\n        promise = auth.createUserWithEmailAndPassword(email!, pwd!);\n        break;\n      case 'signInEmail':\n        promise = auth.signInWithEmailAndPassword(email!, pwd!);\n        break;\n      case 'signInGoogle':\n      case 'signInGoogleR':\n        const provider = new firebase.auth.GoogleAuthProvider();\n        // Optional: Specify additional OAuth 2.0 scopes\n        provider.addScope(\"email\");\n        if (command === 'signInGoogleR') {\n          firebase.auth().signInWithRedirect(provider);\n          promise = auth.getRedirectResult();\n        } else {\n          promise = auth.signInWithPopup(provider);\n        }\n        break;\n      default:\n        return reject({ code: \"authAPI\", message: \"No matching API command!\"});\n    }\n    // Actually, user data is retrieved on stateChanged reducer, we may not need the following process.\n    promise        // Now convert Promise<UserCredential> -> Promise<TUser0>\n      .then(res => {\n        console.log(res);\n        return resolve(res &&  extractUser(res.user));  // extracts necessary fields\n      })\n      .catch(err => {\n        return reject(err);\n      })\n  });\n};\n\nexport const currentUser = () => firebase.auth().currentUser;\n\nexport async function sendEmailVerification() {\n  const user = firebase.auth().currentUser;\n  if (!user)\n    return null;\n  try {\n    await user.sendEmailVerification();\n  } catch(error) {\n    alert(error);\n  }\n}\n","/*=============================================================================\n authContext.tsx - authentication state\n\n - Changed from userContext to authContext, due to the buggy behavior of useSelector\n\n (C) 2020 SpacetimeQ INC.\n=============================================================================*/\nimport {\n  createContext,\n  useContext,\n  FC,\n} from 'react';\nimport { IAuthState } from 'features/auth/authSlice';\nimport { useAuthStateChanged } from 'api/authAPI';\n\n// Context Provider\nconst AuthContext = createContext<IAuthState>({\n  user:    null,\n  pending: false,\n});\n// Context Consumer using Hooks\nexport const useAuthCtx = () => useContext(AuthContext);\n\nexport const AuthProvider: FC = ({ children }) => {\n  const auth = useAuthStateChanged();  // subscribe to the authentication state changes\n  return (\n    <AuthContext.Provider value={auth}>\n      {children}\n    </AuthContext.Provider>\n  );\n}\n","/*=============================================================================\n themeContext.tsx - theme (darkmode, color palettes, etc...) context\n\n  ⚆ 🌙 ☀️\n  |  |  +- 'light'\n  |  +---- 'dark'\n  +------- mode switch: 'class' or 'media' (as defined in tailwindcss)\n           In 'media' mode, dim and disable the slider control\n\n  For 'media' mode, toggle button is disabled and dark mode is set automatically.\n  Uses localStorage.theme = 'dark' or 'light' in 'class'(manual) mode.\n  If the localStorage.theme item does not exist, 'media' mode is enabled.\n  On media query change event, the dark mode changes accordingly in 'media' mode.\n\n (C) 2020 SpacetimeQ INC.\n=============================================================================*/\nimport {\n  createContext,\n  useContext,\n  useState,\n  useLayoutEffect,\n  useCallback,\n} from 'react';\n\ntype TDarkThemeMode = \"dark\" | \"light\";\ninterface IDarkThemeState {\n  dark:     boolean;        // is 'dark' mode?\n  darkMode: TDarkThemeMode; // current dark mode in literal\n  media:    boolean;        // is media (automatic) mode?\n  night:    boolean;        // media state if it's night, to change the mode swich color\n  toggle:   (classMode?: boolean) => void;  // callback\n};\n\n// Context Provider\nconst DarkThemeContext = createContext<IDarkThemeState>({\n  dark:     false,\n  darkMode: \"light\",\n  media:    false,\n  night:    false,\n  toggle:   () => {}\n});\n\n// Context Consumer using Hooks\nexport const useDarkThemeCtx = () => useContext(DarkThemeContext);\n\nconst matchMediaDark: MediaQueryList = window.matchMedia('(prefers-color-scheme: dark)');\n\n// Theme settings priority\n// 1. localStorage.theme = \"dark\"\n// 2. OS setting: (prefers-color-scheme: dark) basically changes according to the local time\n// Current theme state should be saved to the localStorage only when the toggle switch is operated.\nexport const DarkThemeProvider: React.FC = ({ children }) => {\n  const ITEM_THEME = 'theme';\n  const EV_CHANGE  = 'change';\n  const modeName = (isDark: boolean = true): TDarkThemeMode => isDark ? \"dark\" : \"light\";\n  const [dark,  setDark]  = useState(false);\n  const [media, setMedia] = useState(false);\n  const [night, setNight] = useState(false);\n\n  // set dark mode and save the state to localStorage\n  const applyDarkMode = useCallback((dk: boolean, save: boolean = true) => {\n    setDark(dk);\n    const mode = modeName(dk);\n    applyTheme(mode);\n    if (save)\n      window.localStorage.setItem(ITEM_THEME, mode);\n  }, []);\n\n  // paints the app before it renders elements\n  useLayoutEffect(() => {\n    const isMediaMode = () => !(ITEM_THEME in localStorage);  // called in the event handler\n    const handleMediaChange = (e: MediaQueryListEvent) => {\n      setNight(e.matches);\n      if (isMediaMode())\n        applyDarkMode(e.matches, false);\n    }\n    const mediaNight = matchMediaDark.matches;\n    setNight(mediaNight);\n    if (localStorage.getItem(ITEM_THEME) === modeName()) {  // 'class' mode\n      applyDarkMode(true);\n    } else if (isMediaMode()) {\n      setMedia(true);\n      if (mediaNight)\n        applyDarkMode(true, false);\n    }\n    matchMediaDark.addEventListener(EV_CHANGE, handleMediaChange)\n    return () => {\n      matchMediaDark.removeEventListener(EV_CHANGE, handleMediaChange);\n    }\n  }, [applyDarkMode]);  // no dependency on dark, runs only once on load\n\n  // toggle(media) will toggle between \"media\" and \"class\" mode\n  // toggle()      will toggle between \"dark\" and \"light\" mode\n  function toggle(classMode: boolean = true) {\n    if (classMode) {  // manual toggle mode\n      if (media)\n        setMedia(false);\n      applyDarkMode(media ? dark : !dark);  // when switching from media mode, inherit dark\n    } else {  // read from the media (system) preference\n      if (!media) {\n        setMedia(true);\n        applyDarkMode(matchMediaDark.matches, false);\n        window.localStorage.removeItem(ITEM_THEME);\n      }\n    }\n  }\n\n  const darkMode = modeName(dark);\n\n  const applyTheme = (mode: TDarkThemeMode) => {\n    const root = document.getElementsByTagName('html')[0];\n    root.style.cssText = themeCSSVars[mode].join(';');\n  }\n\n  return (  // For tailwindcss, automatically wraps with the dark class\n    <DarkThemeContext.Provider value={{dark, darkMode, media, night, toggle}}>\n      <div className={darkMode}>\n        {children}\n      </div>\n    </DarkThemeContext.Provider>\n  );\n}\n\n// CSS variables used in sass: index signature\nconst themeCSSVars: { [K in TDarkThemeMode]: string[] } = {\n  dark: [\n    '--stq-color-text: white',\n    '--stq-color-background: #374151',\n    '--stq-color-shadow: 50,50,50',\n  ],\n  light: [\n    '--stq-color-text: black',\n    '--stq-color-background: #f3f4f6',\n    '--stq-color-shadow: 0,0,0',\n  ]\n};\n","/*=============================================================================\n AuthRoute - private route with access levels\n DEPENDENCY: redux store to get the authentication status\n\n (C) 2020 SpacetimeQ INC.\n=============================================================================*/\nimport {\n  Route,\n  Redirect,\n  useLocation,\n  RouteProps,\n} from 'react-router-dom';\nimport { TUser0 } from 'common';\n\nexport type TAccessLevel =  // Access Level required for the page\n    0   // public\n  | 1   // login\n  | 2;  // admin (not implemented yet)\nexport interface IAuthRouteProps extends RouteProps {\n  access?: TAccessLevel;   // required access level\n  authLv:  TAccessLevel;   // current user's authorized level: 0 for logged-out\n}\n\n// calls appropriate Route according to the required access level\n// render props passes three route props: match, location, and history\nexport const ARoute = ({\n  access = 0, // required access level of the destination page\n  authLv,     // current authentication level of the user who is requesting the page\n  children,   // target page\n  ...rest     // arguments to react-dom <Route>\n}: IAuthRouteProps) => {\n  return (\n    <Route\n      {...rest}\n      render={ ({ location }) => (authLv >= access)\n        ? children\n        : <Redirect to={{ pathname: \"/auth\", state: { from: location } }} />\n      }\n    />\n  );\n}\n\n// FromPath (original destination path) before redirected to the auth path\nexport const useFromPath = () => {\n  const location = useLocation<{ from: { pathname: string; } }>();\n  return (location && location.state) ? location.state.from.pathname : null;\n}\n\n// Redirect to From (original destination) after getting required authentication\n// You can't use any of the hooks from within the same component that puts the Router into the tree.\nexport const AuthRedirectToFrom = ({ user }: { user: TUser0 }) => {\n  const fromPath = useFromPath();\n\n  if (!fromPath || !user)\n    return null;\n  console.log(\"AuthRedirectToFrom:\", fromPath);\n  return <Redirect to={{ pathname: fromPath }} />;\n}\n\n// A wrapper for <Route> that redirects to the login screen if you're not yet authenticated.\n// location.state is set only when Redirected to the \"/login\" path\n// https://github.com/ReactTraining/history/blob/master/docs/api-reference.md#location.state\n/*\nexport const PrivateRoute = ({ children, ...rest }: RouteProps) => {\n  // const { auth } = useStore().getState();\n  // const auth = useSelector((state: TRootState) => state.auth);\n  // const auth = useSelector((state: ReturnType<typeof store.getState>) => state.auth);\n  // console.log(\"PrivateRoute:\", auth);\n  return (\n    <Route\n      {...rest}\n      render={ ({ location }) => loggedin\n        ? children\n        : <Redirect to={{ pathname: \"/auth\", state: { from: location } }} />\n      }\n    />\n  );\n}\n*/\n","/*=============================================================================\n util.ts - general utility functions\n\n - For debugging, attach \"border border-pink-400 \" to the c_base.\n (C) 2020 SpacetimeQ INC.\n=============================================================================*/\n\n// ----------------------------------------------------------------------------\n// className Utilities - Purposes (mainly for tailwindcss' long list of classNames)\n// ----------------------------------------------------------------------------\n// 1. Combine list of strings, no need to care for the delimeter ' ' between strings.\n// 2. Conditional expressions such as {mobile && 'ml-4'} can be seamlessly added.\n//    (React className string cannot be concatenated with null or false expressions.)\n// 3. Using the Object { className: ... } and the spread operator (...), \"className=\" can be removed.\ntype TCondClassF<T> = (\n  c_base:  TClassName,   // base classname\n  cnd_if:  Maybe<string | boolean>,  // if the condition met\n  c_then:  TClassName,   // concatenate\n  c_else?: TClassName    // (optional) otherwise\n) => T;\n\n// className Conditional\n// Concatenate class names only if the provided condition is met\n// and return the className object so that it can be used with the spread syntax\n// --------------------------------------------------\n//   className={cC()}  --->  {...cCo()}\n// --------------------------------------------------\nexport const cC: TCondClassF<TClassName> = (   // class with options (if-then-else)\n  c_base, cnd_if, c_then, c_else\n) => {\n  if (cnd_if) return (c_base + ' ' + c_then);\n  if (c_else) return (c_base + ' ' + c_else);  // if the third option was given\n  return              c_base;\n}\n\n// className Conditional object\nexport const cCo: TCondClassF<IClassNameObj> = (   // class with options (if-then-else)\n  c_base, cnd_if, c_then, c_else\n) => ({ className: cC(c_base, cnd_if, c_then, c_else) });\n\n// className Conditional 0(no base) object\nexport const cC0o = (\n  cnd_if:  Maybe<string | boolean>,  // if the condition met\n  c_then:  TClassName,   // concatenate\n  c_else?: TClassName    // (optional) otherwise\n): IClassNameObj => ({ className: cnd_if ? c_then : c_else });\n\n// class List\n// --------------------------------------------------\n//  className={\"m-1 text-gray-400 \" + (cls || \"\")} can be written as:\n//  className={cL('m-1', 'text-gray-400', cls)}\n// --------------------------------------------------\nexport function cL(\n  ...clss: TClassName0[]  // rest parameters, list of classNames allowing null or boolean\n): TClassName {\n  return clss.reduce((cum, a) => a  // check this add\n    ? (cum                // if valid previous (cumulative) string\n      ? (cum + ' ' + a)   //   concatenate with the delimeter ' '\n      : a)                // no valid previous string\n    : cum                 // no valid a\n  ) || undefined;         // Only undefined is allowed in nullish expressions in React\n}\n\n// class List object: to omit 'className='\n// --------------------------------------------------\n//   {...cLo('m-1', 'text-gray-400', cls)}\n// --------------------------------------------------\nexport function cLo(\n  ...clss: TClassName0[]\n): IClassNameObj {\n  return { className: cL(...clss) };\n}\n// ----------------------------------------------------------------------------\n\n// number to leadingZero string\n// or use n.toString().padStart(2, \"0\");  // ES6\nexport const lZ = (n: number) =>\n  (n < 10)\n    ? ('0' + n)\n    : n.toString();  // leading Zero making a two digit number string\n\n// time String\nexport const timeStr = (d: string | number | Date) => {\n  const dt = new Date(d);\n  return lZ(dt.getHours()) + ':' + lZ(dt.getMinutes());  // JST=UTC+9\n}\n","/*=============================================================================\n svg.tsx - svg utilities\n\n - Path Data (paths.json) naming convention: shape_role; group_function\n   Examples: bell_noti, moon_dark; ico_error, ico_warn\n\n (C) 2020 SpacetimeQ INC.\n=============================================================================*/\nimport PATHD from 'styles/paths.json';\nimport { cLo } from './util';\n\n// To avoid No Index Signature Error for the bracket (Obj[key])\nexport type TPathDataKey = keyof typeof PATHD;\nexport const getPathD = (k: TPathDataKey) => PATHD[k];\n\n// <path> arguments\nexport const pathRules: React.SVGProps<SVGPathElement> = {\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\"\n};\n\n// <svg> arguments\nexport const viewBox = (vLen: number) => ({\n  viewBox: `0 0 ${vLen} ${vLen}`\n});\n\n// short-hand for <svg width={len} height={len} viewBox=`0 0 ${vLen} ${vLen}`>\nexport const squareView = (len: number | string, vLen: number) => ({\n  width:  len,\n  height: len,\n  ...viewBox(vLen)\n});\n\ninterface ISvg6v24Props extends Partial<IClassNameObj> {\n  d:            string;\n  fill?:        string;\n  stroke?:      string;\n  strokeWidth?: number;\n};\nexport const Svg6v24 = ({\n  className,\n  d,\n  stroke      = \"currentColor\",\n  fill        = \"none\",\n  strokeWidth = 2\n}: ISvg6v24Props\n) =>\n  <svg {...cLo(\"w-6 h-6\", className)} {...{stroke, fill}} {...viewBox(24)}>\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" {...{strokeWidth, d}} />\n  </svg>;\n","/*=============================================================================\n common-ui.tsx - Common UIs in React\n\n (C) 2020 SpacetimeQ INC.\n=============================================================================*/\nimport { useState } from 'react';\nimport {\n  IButtonProps\n} from 'common';\nimport {\n  cL, cLo,\n} from 'utils/util';\nimport {\n  pathRules,\n  viewBox,\n  TPathDataKey,\n  getPathD,\n} from 'utils/svg';\n\ninterface IExButtonProps extends Partial<IButtonProps>, IClassNameObj {};\nexport const ButtonPurple: React.FC<IExButtonProps> = (props) => {\n  const { className: cn, ...rest } = props;  // cn will be added only when it's a valid string\n  return (\n    <button\n      {...cLo(\"flex-shrink-0 bg-purple-600 text-base font-bold py-2 px-4\",\n        \"rounded-lg shadow-md hover:bg-purple-700 focus:outline-none focus:ring-2\",\n        \"focus:ring-purple-500 focus:ring-offset-2 focus:ring-offset-purple-200 text-white\", cn)}\n      {...rest}\n    />\n  );\n}\n\n// Extract the behavior to close(hide) on click as a hook\n// When you need to keep the layout and just hide the window, use \"invisible\"\n// - Dependencies: .Ani_dialog / .Ani_dialog_close in App.scss\n// Usage) const { display, handleClose } = useClose(\"opacity-50\");\n// <div {...cLo(\"...\", display)} onClick={handleClose} >\ntype TOpVariant = 0 | 5 | 10 | 20 | 25 | 30 | 40 | 50 | 60 | 70 | 75 | 80 | 90 | 95 | 100;\nexport type THideAttr =\n  | \"hidden\"\n  | \"invisible\"\n  | `opacity-${TOpVariant}`\n  | \"Ani\";\nexport const useClose = (hideAttr: THideAttr = \"Ani\") => {\n  const [close, setClose] = useState(false);\n  const handleClose = () => {\n    setClose(!close);\n  }\n  return {\n    hide: (hideAttr === \"Ani\")\n      ? `Ani_dialog${close ? \"_close\" : \"\"}`\n      : (close ? hideAttr : \"\"),\n    handleClose\n  };\n}\n\nexport type TIconKind = \"error\" | \"ok\" | \"warn\" | \"info\";\nexport type TIconKindColors = { [K in TIconKind]:  stringU };\n// IconButton on the dialog\n// role=\"button\" shows cursor-pointer\ninterface IIconButtonProps extends Partial<IClassNameObj> { // add height, width, text and border colors\n  kind:    TIconKind;   // kind of the icon image\n  onClick: () => void;  // callback to close(hide) parent\n};\nexport const IconButton = ({\n  kind,\n  className = \"h-10 w-10 border-4\",\n  onClick\n}: IIconButtonProps) => {\n  const colors: TIconKindColors = {\n    error:\n      cL(\"text-red-500 border-red-500 hover:text-red-700 hover:border-red-700\",\n         \"dark:text-yellow-400 dark:border-yellow-400 dark:hover:text-white dark:hover:border-white\"),\n    ok:\n      cL(\"text-green-500 border-green-500 hover:text-green-700 hover:border-green-700\",\n         \"dark:text-white dark:border-white dark:hover:text-white dark:hover:border-white\"),\n    warn:\n      cL(\"text-yellow-500 border-yellow-500 hover:text-yellow-700 hover:border-yellow-700\",\n         \"dark:text-white dark:border-white dark:hover:text-white dark:hover:border-white\"),\n    info:\n      cL(\"text-blue-500 border-blue-500 hover:text-blue-700 hover:border-blue-700\",\n         \"dark:text-white dark:border-white dark:hover:text-white dark:hover:border-white\"),\n  };\n  return (\n    <div\n      {...cLo(\"flex items-center justify-center flex-shrink-0 rounded-full hover:shadow-md\",\n        \"transition duration-300 ease-in-out transform hover:scale-125\",\n        colors[kind], className)}\n      role=\"button\"\n      onClick={onClick}\n    >\n      <svg fill=\"currentColor\" {...viewBox(20)} className=\"w-6 h-6\">\n        <path {...pathRules} d={getPathD((\"ico_\" + kind) as TPathDataKey)} />\n      </svg>\n    </div>\n  );\n}\n/* &times; */\n\nexport const CloseButton = ({\n  className = \"h-4 w-4 border\",\n  onClick\n}: IIconButtonProps) => {\n  return (\n    <IconButton\n      kind=\"error\"\n      {...cLo(\"absolute top-0 right-0 mt-1 mr-1 opacity-50 hover:opacity-100\", className)}\n      onClick={onClick}\n    />\n  );;\n}\n\nexport const SpinningCircle = ({\n  className = \"h-10 w-10 text-white\"\n}: Partial<IClassNameObj>) =>\n  <svg\n    {...cLo(\"animate-spin -ml-1 mr-3\", className)}\n    xmlns=\"http://www.w3.org/2000/svg\"\n    fill=\"none\"\n    {...viewBox(24)}\n  >\n    <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\" />\n    <path className=\"opacity-75\" fill=\"currentColor\" d={getPathD(\"arc_spin\")} />\n  </svg>;\n\n","/*=============================================================================\n AuthForms.tsx - authentication forms including email login, etc.\n\n (C) 2020 SpacetimeQ INC.\n=============================================================================*/\nimport { useState } from 'react';\nimport { useAppDispatch } from 'app/store';\nimport { apiReq } from './authSlice';\nimport {\n  cC0o, cLo\n} from 'utils/util';\nimport {\n  IUser\n} from 'common';\nimport {\n  ButtonPurple,\n} from 'ui/ui';\nimport {\n  useLSEmailPwd,\n} from 'utils/useLocalStorage';\nimport {\n  getPathD,\n} from 'utils/svg';\n\n// Switchable Signup or Login button by the checkbox\nconst EmailForm = () => {\n  const [email,  setEmail]  = useState<string>(\"\");\n  const [pwd,    setPwd]    = useState<string>(\"\");\n  const [save,   setSave]   = useState(false);  // Remember checkbox\n  const [signup, setSignup] = useState(false);  // New User checkbox\n  const dispatch = useAppDispatch();\n  const updateLSEmailPwd = useLSEmailPwd(setSave, setEmail, setPwd);\n\n  const onFormSubmit: React.FormEventHandler = (ev) => {\n    if (!email || !pwd || !/^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/.test(email)) {\n      alert(\"Invalid email or password!\");\n      return null;\n    }\n    updateLSEmailPwd(save, email, pwd);\n    dispatch( apiReq({ command: signup ? 'createUser' : 'signInEmail', email, pwd }) );\n    ev.preventDefault();\n  }\n  return (\n    <form\n      className=\"flex flex-col w-full max-w-sm mx-auto mt-1\"\n      onSubmit={ev => onFormSubmit(ev)}\n    >\n      <div className=\"flex flex-col\">\n        <InputText\n          id=\"email\"\n          className=\"text-gray-900\"\n          placeholder=\"Email address\"\n          value={email}\n          onChange={ev => setEmail(ev.target.value)}\n          iconPath={getPathD(\"email_auth\")}\n        />\n        <InputText\n          id=\"password\"\n          type={signup ? \"text\" : \"password\"}\n          className=\"text-gray-400\"\n          placeholder=\"password\"\n          value={pwd}\n          onChange={ev => setPwd(ev.target.value)}\n          iconPath={getPathD(\"lock_auth\")}\n        />\n        <ButtonPurple {...cC0o(signup, \"text-yellow-200\", \"text-white\")}>\n          {signup ? \"New Signup\" : \"Login\"}\n        </ButtonPurple>\n      </div>\n      <div className=\"flex justify-around\">\n        <LabeledCheckbox\n          id=\"remember\"\n          checked={save}\n          onChange={ev => setSave(ev.target.checked)}\n          label=\"Remember\"\n          classLabel=\"font-bold dark:text-gray-100 text-black\"\n        />\n        <LabeledCheckbox\n          id=\"signup\"\n          checked={signup}\n          onChange={ev => setSignup(ev.target.checked)}\n          label=\"NEW User?\"\n          classLabel=\"font-bold dark:text-blue-100 text-blue-700\"\n        />\n      </div>\n    </form>\n  );\n}\n\ninterface IInputTextProps extends React.InputHTMLAttributes<HTMLInputElement> {\n  iconPath?: string;\n};\nconst InputText = (props: IInputTextProps) => {\n  const { iconPath, className, ...rest } = props; // className will be merged with the default in <input>\n\n  return (\n    <div className=\"relative text-gray-400 focus-within:text-gray-600\">\n      <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n        {iconPath &&\n        <svg className=\"h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d={iconPath} />\n        </svg>}\n      </div>\n      <input\n        {...cLo(\"py-2 mb-1 font-mono bg-white placeholder-gray-400 rounded-lg shadow-md\",\n          \"appearance-none w-full block pl-12 border border-gray-400 focus:outline-none\",\n          className)}\n        {...rest}\n      />\n    </div>\n  );\n}\n\ninterface ILabeledCheckboxProps extends React.InputHTMLAttributes<HTMLInputElement> {\n  label:       string;\n  classLabel?: string;  // className is for <input> element, classLabel is for the label\n};\nconst LabeledCheckbox = (props: ILabeledCheckboxProps) => {\n  const { label, classLabel, ...rest } = props;\n  return (\n    <label htmlFor={props.id}>\n      <input type=\"checkbox\" {...rest} />\n      <span {...cLo(\"ml-2\", classLabel)}>{label}</span>\n    </label>\n  );\n}\n\nexport const AuthForms = () => {\n  const dispatch = useAppDispatch();\n  const cloGoogleBtn = cLo(\n    \"flex-shrink-0 bg-blue-700 text-white text-base font-semibold mt-2 py-2 px-4\",\n    \"rounded-lg shadow-md hover:bg-blue-800 focus:outline-none focus:ring-2 focus:ring-blue-500\",\n    \"focus:ring-offset-2 focus:ring-offset-blue-200\");\n\n  return (\n    <div className=\"flex flex-col w-80 max-w-sm mx-auto mt-1\">\n      <EmailForm />\n      <button\n        type=\"button\"\n        {...cloGoogleBtn}\n        onClick={() => dispatch( apiReq({ command: 'signInGoogle' }) )}\n      >\n        <img\n          className=\"absolute rounded-md -ml-3 -mt-2\"\n          width=\"40px\" src=\"btn_google.svg\" alt=\"google-icon\"\n        />\n        Sign In with Google\n      </button>\n      <h1 className=\"mt-4 font-mono text-center dark:text-gray-100 text-gray-800\">\n        Experiment\n      </h1>\n    </div>\n  );\n}\n/*\n      <button\n        type=\"button\"\n        {...cloGoogleBtn}\n        onClick={() => dispatch( apiReq({ command: 'signInGoogleR' }) )}\n      >\n        Sign In with Google - Redirection\n      </button>\n */\n\nexport const LogoutForm = ({ user }: { user: IUser }) => {\n  const avatarUrl = (url: string0) =>\n    url || \"https://github.com/dashgon/dashgon.github.io/blob/master/public/shiba/shiba.png?raw=true\";\n  return (\n    <div className=\"flex flex-col w-full max-w-sm mx-auto mt-1 space-x-3\">\n      <div className=\"flex flex-col\">\n        <div className=\"flex justify-center\">\n          <img src={avatarUrl(user.photoURL)} width=\"200\" alt=\"profile\" />\n          {!user.photoURL && <figcaption className=\"absolute text-lg\">Register Your Profile</figcaption>}\n        </div>\n        <ul className=\"ml-8 font-semibold list-disc\">\n          <li>Email:<span className=\"ml-2 font-bold text-blue-800\">{user.email}</span></li>\n          <li>uid:<span className=\"ml-2 text-sm font-normal font-mono\">{user.uid}</span></li>\n          <li>name:<span className=\"ml-2 px-2 bg-yellow-200 rounded-lg\">{user.name}</span></li>\n        </ul>\n        <div className=\"flex justify-center m-2\">\n          <LogoutButton className=\"w-full p-2\">Logout</LogoutButton>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport const LogoutButton: React.FC<React.HTMLAttributes<HTMLButtonElement>> = (props) => {\n  const dispatch = useAppDispatch();\n  const { className, children, ...rest } = props;\n  return (\n    <button\n      type=\"button\"\n      {...cLo(\"bg-red-100 hover:bg-red-700 font-bold text-black hover:text-white\", className)}\n      onClick={() => dispatch( apiReq({ command: 'signOut' }) )}\n      {...rest}\n    >\n      {children}\n    </button>\n  );\n}\n","/*=============================================================================\n useLocalStorage.ts - description\n\n - SECRET_KEY included in the client side javascript: needs improvement\n\n (C) 2020 SpacetimeQ INC.\n=============================================================================*/\nimport { useEffect } from 'react';\n\nimport CryptoAES from 'crypto-js/aes';\nimport CryptoENC from 'crypto-js/enc-utf8';\n\n// Email and Password from LocalStorage; useEffect wrapper\nexport const useLSEmailPwd = (\n  setSave : (save:  boolean) => void,\n  setEmail: (email: string)  => void,\n  setPwd  : (pwd:   string)  => void\n) => {\n  const SECRET_KEY = 'stq-yokohama';\n  const ITEM_EMAIL = \"stq_email\";\n  const ITEM_PASS  = \"stq_pass\";\n\n  useEffect(() => {  // initialization from the localStorage is the side-effect\n    const ls_email = localStorage.getItem(ITEM_EMAIL);\n    if (ls_email) {\n      setEmail(ls_email);\n      const ls_pass = localStorage.getItem(ITEM_PASS);\n      if (ls_pass)  // retrieve password and decrypt\n        setPwd(CryptoAES.decrypt(ls_pass, SECRET_KEY).toString(CryptoENC));\n      setSave(true);\n      console.log(\"🍏\", ls_email);\n    }\n  }, [setSave, setEmail, setPwd]);  // run only once on mount\n\n// Update Email and Password to LocalStorage\n  const updateLSEmailPwd = (save: boolean, email: string, pwd: string) => {\n    if (save) { // save with encrypted password\n      localStorage.setItem(ITEM_EMAIL, email);\n      localStorage.setItem(ITEM_PASS, CryptoAES.encrypt(pwd, SECRET_KEY).toString());\n    } else {  // if no save mode, remove all items\n      if (localStorage.getItem(ITEM_EMAIL)) {\n        localStorage.removeItem(ITEM_EMAIL);\n        localStorage.removeItem(ITEM_PASS);\n      }\n    }\n  }\n  return updateLSEmailPwd;\n}\n","/*=============================================================================\n UserMenu.tsx - User Menus\n\n (C) 2020 SpacetimeQ INC.\n=============================================================================*/\nimport {\n  NavLink,\n} from 'react-router-dom';\nimport { useAuthCtx }     from 'app/AuthContext';\nimport { TAccessLevel }   from 'ui/AuthRoute';\nimport {\n  IMenuItemClickProps\n} from 'common';\nimport { cC0o, cCo, cL, cLo } from 'utils/util';\nimport { LogoutButton } from 'features/auth/AuthForms';\n\n// Menu items have two types of links:\n// 1. Route causes the page(url) change - to: url\n// 2. command with no page change       - title: used as a command\nconst MENU_SIGNOUT = 'signout';\ninterface IMenuItem {\n  access: TAccessLevel;\n  to?   : string;\n  title : string;\n};\nconst USER_MENUITEMS: IMenuItem[] =\n[\n  { access: 0, to: \"/auth\",    title: \"Sign in\", },  // when signed-out\n  { access: 1, to: \"/profile\", title: \"Profile\", },  // when signed-in\n  { access: 1, to: \"/setting\", title: \"Setting\", },  //\n  { access: 1, title: MENU_SIGNOUT, }\n];\n\nconst ProfileImg = ({ img }: { img: string0 }) =>\n  <img\n    {...cCo(\"w-8 h-8 rounded-full\", img, \"border border-yellow-400\", \"bg-gray-200\")}\n    src={img || 'icon-anonymous.png'}\n    alt=\"avatar\"\n  />;\n\n// Popup Menu - display on hover: with CSS classes Dropdown, Dropdown-menu\nexport const UserMenu = () => {\n  const user = useAuthCtx().user;\n  return (\n    <div className=\"relative ml-3 Dropdown\">\n      <button\n        {...cLo(\"flex text-sm border-2 border-transparent rounded-full transition\",\n          \"duration-150 ease-in-out hover:border-yellow-500 focus:outline-none focus:border-white\")}\n        id=\"user-menu\"\n        aria-label=\"User menu\"\n        aria-haspopup=\"true\"\n      >\n        <ProfileImg img={user && user.photoURL} />\n      </button>\n      <div className=\"Dropdown-menu hidden absolute right-0 z-40 w-32 rounded-full shadow-lg origin-top-right\">\n        <UserMenuList popup accessLv={user ? 1 : 0} />\n      </div>\n    </div>\n  );\n}\n\n// Used in Navbar.tsx\nexport const UserMenuListPulldown = (props: IMenuItemClickProps) => {\n  const user = useAuthCtx().user;\n  return (\n    <div className=\"pb-3 border-t border-gray-700\">\n      { user &&\n      <div className=\"flex items-center pt-3 px-5 space-x-3\">\n        <div className=\"flex-shrink-0\">\n          <ProfileImg img={user.photoURL} />\n        </div>\n        <div className=\"space-y-1 font-medium leading-none\">\n          <div className=\"text-base dark:text-white text-black\">{user.name}</div>\n          <div className=\"text-sm dark:text-gray-400 text-gray-600\">{user.email}</div>\n        </div>\n      </div>\n      }\n      <UserMenuList accessLv={user ? 1 : 0} {...props} />\n    </div>\n  );\n}\n\n// Disable the menuitem when it matches the current URL, using <NavLink> rather than <Link>.\n// Show menuitems according to the access level\nconst UserMenuList = ({ popup, accessLv }: {\n  popup?: boolean,\n  accessLv: 0 | 1;\n}) => {\n  return (\n    <div\n      {...cC0o(popup,\n        \"py-1 bg-white rounded-md shadow-xs\",\n        \"px-2 mt-3 space-y-1\")}\n      role=\"menu\"\n      aria-orientation=\"vertical\"\n      aria-labelledby=\"user-menu\"\n    >\n      {USER_MENUITEMS.filter(a => a.access === accessLv).map((m, i) =>\n        {return (m.to)\n        ? <NavLink\n            key={i}\n            exact to={m.to}\n            {...cC0o(popup,\n              \"block px-4 py-2 text-sm font-bold text-gray-700 hover:bg-gray-100\",\n              cL(\"block px-3 py-1 text-base font-medium rounded-md dark:text-gray-300 text-gray-800\",\n                \"hover:text-white hover:bg-gray-700 focus:outline-none focus:text-white focus:bg-gray-700\"))}\n            activeStyle={{\n              pointerEvents: 'none',\n              fontStyle: 'italic',\n              color: 'darkgray'\n            }}\n            role=\"menuitem\"\n          >\n            {m.title}\n          </NavLink>\n        : <MenuCommands key={i} popup={popup} command={m.title} />\n      })}\n    </div>\n  );\n}\n\nconst MenuCommands = ({ popup, command }: {\n  popup?:  boolean,\n  command: string,\n}) => {\n  switch (command) {\n    case MENU_SIGNOUT:\n      return (\n        <LogoutButton\n          {...cCo(\"px-4\", popup, \"w-full\", \"rounded-md bg-gray-200\")}\n        >\n          Sign Out\n        </LogoutButton>\n      );\n    default:\n      return null;\n  }\n}\n","/*=============================================================================\n toggleDark.tsx - description\n\n - Removed useState from the button, let the parent keep and handle the state:\n   stateless buttons\n - Just propagate onClick event, a callback from the parent\n - using React ContextAPI, let the <ToggleDarkButton> be active in itself\n\n (C) 2020 SpacetimeQ INC.\n=============================================================================*/\nimport {\n  cCo, cLo\n} from 'utils/util';\nimport {\n  pathRules,\n  squareView,\n  getPathD,\n} from 'utils/svg';\nimport {\n  IButtonProps,\n} from 'common';\nimport { useDarkThemeCtx } from 'app/darkThemeCtx';\n\n// slider: Change of the position by justify-end cannot be animated with transition.\n// 'translate' of the slider can be animated but how can we figure out the amount?\ninterface IToggleSliderProps extends IButtonProps {\n  on:        boolean;       // on or off\n  colors?:   string0;       // button colors\n  srOnly?:   string0;       // screen reader only\n  size?:     TSizeVariants; // slider/ball size\n  disabled?: boolean;       // disable slider\n}\nexport const ToggleSlider: React.FC<IToggleSliderProps> = ({\n  on, onClick,\n  colors,\n  srOnly,\n  size = 'md',\n  disabled,\n  children,\n}) => {\n  const sz = {  // size dependent adjustment\n    sm: { slide: \"w-7 h-4\",  ball: \"w-3 h-3\", dx: \"translate-x-3\" },\n    md: { slide: \"w-11 h-6\", ball: \"w-5 h-5\", dx: \"translate-x-5\" },\n    lg: { slide: \"w-14 h-8\", ball: \"w-7 h-7\", dx: \"translate-x-6\" },\n  };\n  return (\n    <button\n      role=\"switch\"\n      tabIndex={0}\n      {...cLo(\"inline-flex items-center px-0.5 rounded-full\", sz[size].slide,\n        \"transition-colors duration-200 focus:outline-none Inner-shadow\", colors)}\n      aria-checked={on}\n      onClick={onClick}\n      disabled={disabled}\n    >\n      {srOnly && <span className=\"sr-only\">{srOnly}</span>}\n      {children}\n      <span\n        {...cLo(\"absolute rounded-full border\",\n          disabled ? \"border-gray-800 bg-gray-500 Ball-shadow\" : \"border-gray-400 bg-white Ball-shadow\",\n          \"transition transform duration-300 ease-in-out\",\n          on && sz[size].dx, sz[size].ball)}\n        style={{ transformOrigin: \"50% 50% 0px\" }}\n      />\n    </button>\n  );\n}\n\n// Left Button switch to enable/disable \"media\" mode (that prefers media)\n// ToggleSlider to force \"dark\"/\"light\" mode\nexport const ToggleDarkButton = ({\n  className,\n  colors    = \"bg-gray-500\",\n  size      = 'md',\n}: Partial<IClassNameObj> & Pick<IToggleSliderProps, \"colors\" | \"size\">) => {\n  const { dark, media, night, toggle } = useDarkThemeCtx();  // checks both LocalStorage.theme and prefers-color-scheme\n  const stopCls = \"transition-colors duration-200\";\n  const len = {  // sun and moon icon sizes\n    sm: { light: 20, dark: 16 },\n    md: { light: 24, dark: 20 },\n    lg: { light: 28, dark: 24 },\n  };\n  return (\n    <span {...cLo(\"flex items-center\", className)}>\n      <button\n        role=\"switch\"\n        {...cCo(\"w-2.5 h-2.5 rounded-full mr-1.5 Ball-shadow focus:outline-none border border-gray-500\",\n          media, \"bg-gray-200\", night ? \"bg-red-500\" : \"bg-green-400\")}\n        aria-checked={!media}\n        onClick={() => toggle(media)}\n      />\n      <ToggleSlider\n        on={dark}\n        onClick={() => toggle()}\n        srOnly=\"Dark mode switch\"\n        colors={media ? colors + \" opacity-50\" : colors}\n        size={size}\n        disabled={media}\n      >\n        <svg\n          {...squareView(len[size].dark, 24)}\n          {...cLo(stopCls, \"mx-1 dark:text-yellow-200 text-gray-500\")}\n          fill=\"currentColor\"\n        >\n          <path {...pathRules} d={getPathD(\"moon_dark\")} />\n        </svg>\n        <svg {...squareView(len[size].light, 32)} fill=\"none\">\n          <path {...pathRules} fill=\"url(#lG_light)\" d={getPathD(\"sun_light\")} />\n          <defs>\n            <linearGradient id=\"lG_light\" x1=\"2\" y1=\"2\" x2=\"30\" y2=\"30\" gradientUnits=\"userSpaceOnUse\">\n              <stop className={stopCls} stopColor={dark ? \"#d4d4d8\" : \"#FACC15\"} />\n              <stop className={stopCls} stopColor={dark ? \"#d4d4d8\" : \"#FA9D16\"} offset=\"1\" />\n            </linearGradient>\n          </defs>\n        </svg>\n      </ToggleSlider>\n    </span>\n  );\n}\n\n// button - needs customization for the following non-default tailwind classes\n//  focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-offset-white focus-visible:ring-gray-500\n//  button style={{backgroundColor: dark ? \"rgb(17,24,39)\" : \"rgb(96,211,96)\"}}\n","/*=============================================================================\n app/Navbar.tsx - Navigation Bar\n\n (C) 2020 SpacetimeQ INC.\n=============================================================================*/\nimport { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport {\n  UserMenu,\n  UserMenuListPulldown\n} from './UserMenu';\nimport {\n  IButtonProps,\n  IMenuItemClickProps,\n  TButtonClickHandler\n} from 'common';\nimport {\n  cCo, cC0o, cLo, cL,\n} from 'utils/util';\nimport { ToggleDarkButton } from 'ui/toggleDark';\nimport {\n  getPathD,\n  Svg6v24,\n} from 'utils/svg';\n\n// To connect components to the link, define them in Layout.tsx\nconst MenuLinks = [\n  { to: \"/\",         title: <Svg6v24 d={getPathD(\"home_nav\")} /> },\n  { to: \"/chat\",     title: \"Chat\" },\n  { to: \"/calendar\", title: \"Calendar\" },\n  { to: \"/timeline\", title: \"Timeline\" },\n];\n\n// =========================================\n// Tailwind Colorset Definitions\n// =========================================\n// colorset Background, Border\nconst tcsBgBorder = \"dark:border-gray-600 dark:bg-gray-800 border-gray-800 bg-gray-200\";\n// colorset Text, Focus\nconst tcsTextFocus = cL(\n  \"dark:text-gray-300 dark:hover:text-white\",\n  \"text-gray-700 hover:text-black\",\n  \"dark:focus:outline-none dark:focus:text-white dark:focus:bg-gray-700\",\n  \"focus:outline-none focus:text-black focus:bg-gray-300\"\n);\n// colorset Text\nconst tcsText = \"dark:text-gray-200 text-gray-800\";\n// =========================================\n\nconst MainMenuList = ({ mobile, onMenuItemClick }: {\n  mobile?: Undefinable<boolean>,\n} & IMenuItemClickProps) => {\n  return (\n    <div\n      {...cC0o(mobile, cL(\"border-b border-t\", tcsBgBorder), \"flex flex-row\")}\n    >\n      {MenuLinks.map(m =>\n        <NavLink\n          key={m.to}\n          exact\n          to={m.to}\n          {...cLo(\"px-2 py-2 font-medium rounded-md opacity-70\",\n                  tcsTextFocus, mobile && \"block ml-3\")}\n          activeStyle={{\n            textDecoration: 'underline',\n            opacity: 1\n          }}\n          onClick={onMenuItemClick}\n        >\n          {m.title}\n        </NavLink>)}\n    </div>\n  );\n}\n\n// color doesn't change for the png file\nconst LogoButton = ({ onClick }: IButtonProps) => {\n  return (\n    <button\n      {...cLo(\"p-2 mt-2 border-2 border-transparent rounded-full\",\n        \"bg-gray-800 hover:bg-gray-700 focus:bg-gray-700\")}\n      aria-label=\"Logo\"\n      onClick={onClick}\n    >\n      <img className=\"w-6 h-6\" src=\"logo.png\" alt=\"\" />\n    </button>\n  );\n}\n\n// << button\nconst SideArrowButton = ({ onClick }: IButtonProps) => {\n  return (\n    <button\n      {...cLo(\"p-1 border-2 border-transparent rounded-full\", tcsTextFocus)}\n      aria-label=\"SideArrow\"\n      onClick={onClick}\n    >\n      <Svg6v24 d=\"M11 19l-7-7 7-7m8 14l-7-7 7-7\" />\n    </button>\n  );\n}\n\nconst NotiIconButton = ({ onClick }: IButtonProps) => {\n  return (\n    <button\n      {...cLo(\"ml-2 p-2 border-transparent rounded-full\", tcsTextFocus)}\n      aria-label=\"Notifications\"\n      onClick={onClick}\n    >\n      <Svg6v24 d={getPathD(\"bell_noti\")} />\n    </button>\n  );\n}\n\n// Create both on and off state svg and then switch the show and hide attribute only\n// Make sure just the class= toggles not the <svg itself using the Inspector\n// is Menu On (shown)?\nconst BurgerButton = ({ isOn, onClick }: { isOn: boolean; } & IButtonProps) => {\n  const hideAttr = (hide: boolean) => hide ? 'hidden' : 'block';\n  return (\n    <button\n      {...cLo(\"inline-flex items-center px-3 py-2 justify-center\", tcsTextFocus)}\n      onClick={onClick}\n    >\n      <Svg6v24 className={hideAttr(isOn)}  d=\"M4 6h16M4 12h16M4 18h16\" />\n      <Svg6v24 className={hideAttr(!isOn)} d=\"M6 18L18 6M6 6l12 12\" />\n    </button>\n  );\n}\n\n// https://tailwindcss.com/docs/responsive-design\n// Breakpoints (sm, md, lg, xl): takes effect at the specified bp and above\nexport default function Navbar() {\n  const [mobileMenuOn, setMobileMenuOn] = useState(false);  // is Mobile Menu On\n  const forDesktop = \"hidden md:block\";\n  const forMobile  = \"md:hidden\";\n\n  const onLogoClick: TButtonClickHandler = (_e) => {\n    console.log(\"Logo clicked!\");\n  }\n\n  const onSideArrowClick: TButtonClickHandler = (_e) => {\n    console.log(\"Side Arrow clicked!\");\n  }\n\n  const onNotificationClick: TButtonClickHandler = (_e) => {\n    console.log(\"Notification clicked!\");\n  }\n  \n  return (\n    <>\n      <nav {...cLo(\"fixed z-20 w-full flex flex-col shadow-lg\", tcsBgBorder)}>\n        <div className=\"flex items-center justify-between Sq_navbar-h mx-2\">\n\n          <div {...cLo(\"flex items-center\", tcsText)}>\n            <div {...cLo(\"flex-shrink-0 mb-2\", forDesktop)}>\n              <div className=\"relative flex items-center justify-center\">\n                <LogoButton onClick={onLogoClick} />\n              </div>\n            </div>\n            <div {...cLo(\"flex items-center\", forMobile, tcsText)}>\n              <SideArrowButton onClick={onSideArrowClick} />\n            </div>\n            <div className={forDesktop}>\n              <MainMenuList onMenuItemClick={ _e => null } />\n            </div>\n          </div>\n\n          <div className=\"flex items-center ml-4 md:ml-6\">\n            <ToggleDarkButton />\n            <NotiIconButton onClick={onNotificationClick} />\n            <div className={forDesktop}>\n              <UserMenu />\n            </div>\n          </div>\n          <div {...cLo(\"flex -mr-2\", forMobile)}>\n            <BurgerButton isOn={mobileMenuOn} onClick={_e => setMobileMenuOn(!mobileMenuOn)} />\n          </div>\n\n        </div>\n        <div {...cCo(forMobile, mobileMenuOn, 'block', 'hidden')}>\n          <MainMenuList mobile  onMenuItemClick={ _e => setMobileMenuOn(false) } />\n          <UserMenuListPulldown onMenuItemClick={ _e => setMobileMenuOn(false) } />\n        </div>\n      </nav>\n      <div className=\"Sq_navbar-h\" />\n    </>\n  );\n}\n","/*=============================================================================\n forms.tsx - common forms UI\n\n (C) 2020 SpacetimeQ INC.\n=============================================================================*/\nimport {\n  IError\n} from 'common';\nimport {\n  cL, cLo,\n} from 'utils/util';\nimport {\n  useClose,\n  TIconKind,\n  TIconKindColors,\n  IconButton,\n  CloseButton,\n  SpinningCircle,\n} from 'ui/ui';\n\n// Error Message Dialog\nexport const ErrorDlg = ({ error }: { error: IError }) => {\n  return (\n    <IconDialog\n      kind=\"error\"\n      title={\"ERROR: \" + error.code}\n      content={error.message}\n    />\n  );\n}\n\nexport const IconDialog = ({kind, title, content}: {\n  kind:    TIconKind,\n  title:   string0,\n  content: string,\n}) => {\n  const { hide, handleClose } = useClose();  // \"Ani\"\n  const colorsBack: TIconKindColors = { // background, border,     dark:\n    error: cL(\"bg-red-200 border-red-300\",       \"dark:bg-red-800 dark:border-red-600\"),\n    ok:    cL(\"bg-green-200 border-green-300\",   \"dark:bg-green-800 dark:border-green-600\"),\n    warn:  cL(\"bg-yellow-200 border-yellow-300\", \"dark:bg-yellow-800 dark:border-yellow-600\"),\n    info:  cL(\"bg-blue-200 border-blue-300\",     \"dark:bg-blue-800 dark:border-blue-600\"),\n  };\n  const colorsText: TIconKindColors = {\n    error: \"text-red-800 dark:text-yellow-200\",\n    ok:    \"text-green-800 dark:text-white\",\n    warn:  \"text-yellow-800 dark:text-gray-300\",\n    info:  \"text-blue-800 dark:text-white\",\n  }\n  return (\n    <div\n      {...cLo(\"my-2 mx-8 flex flex-row items-center p-3 rounded-xl border-b-2 shadow-lg\",\n        \"transition-colors duration-500\", colorsBack[kind], hide)}\n    >\n      <IconButton\n        kind={kind}\n        onClick={handleClose}\n      />\n      <div className=\"ml-4 font-mono\">\n        <div {...cLo(\"font-semibold text-md\", colorsText[kind])}>\n          {title}\n        </div>\n        <div className=\"text-sm dark:text-gray-200\">\n          {content}\n        </div>\n      </div>\n    </div>\n  );\n}\n\n// Message with Avatar and close button\ninterface IAvatarDlgProps {\n  img:       string,\n  title:     string,\n  message:   string,\n  close?:    boolean,  // enable close button\n  boxClass?: string,   // box width\n  obiClass?: string,   // obi(color band) width and color\n};\nexport const AvatarDlg = ({\n  img, title, message, close,\n  boxClass = \"max-w-lg\",\n  obiClass = \"w-2 dark:bg-gray-400 bg-gray-800\",\n}: IAvatarDlgProps) => {\n  const { hide, handleClose } = useClose();  // \"Ani\"\n  return(\n    <div {...cLo(\"flex justify-around m-2\", hide)}>\n      <div\n        {...cLo(\"flex shadow-lg rounded-lg border overflow-hidden relative\", boxClass,\n          \"transition-colors duration-500\",\n          \"dark:bg-gray-800 dark:border-gray-600\",\n          \"bg-gray-50 border-gray-300\")}\n      >\n        <div {...cLo(\"flex-shrink-0 mr-1\", obiClass)}></div>\n        <div className=\"flex items-center px-2 py-3\">\n          <img\n            className=\"w-12 h-12 object-cover rounded-full Scale_hover border dark:border-pink-200\"\n            src={img}\n            alt=\"avatar-message\"\n          />\n          <div className=\"mx-3\">\n            <h2 className=\"text-xl font-semibold dark:text-white text-gray-800\">{title}</h2>\n            <p className=\"text-md dark:text-gray-200 text-gray-600\">{message}</p>\n          </div>\n        </div>\n        {close &&\n          <CloseButton kind=\"error\" onClick={handleClose} />}\n      </div>\n    </div>\n  );\n}\n\n// Pending/Wait/Loading Message\nexport const PendingDlg = ({\n  text = \"Loading...\"\n}: { text?: string }) => {\n  return (\n    <div className=\"flex justify-around mt-2\">\n      <span className=\"inline-flex rounded-md shadow-sm\">\n        <div\n          role=\"button\"\n          {...cLo(\"inline-flex items-center px-4 py-2 border border-transparent text-base\",\n            \"leading-6 font-medium rounded-md text-white bg-rose-500 hover:bg-rose-800\",\n            \"transition ease-in-out duration-150 cursor-not-allowed\")}\n        >\n          <SpinningCircle />\n          {text}\n        </div>\n      </span>\n    </div>\n  );\n}\n\n","/*=============================================================================\n authPage.tsx - authentication page\n\n (C) 2020 SpacetimeQ INC.\n=============================================================================*/\nimport { useAuthCtx } from 'app/AuthContext';\nimport {\n  AuthForms,\n  LogoutForm,\n} from './AuthForms';\nimport { useFromPath }  from 'ui/AuthRoute';\nimport {\n  ErrorDlg,\n  PendingDlg,\n} from 'ui/forms';\nimport {\n  cLo,\n} from 'utils/util';\n\nconst SpacetimeQText = () =>\n  <span className=\"py-1 rounded-md\">\n    <span className=\"text-blue-400\">Space</span>\n    <span className=\"text-green-400\">time</span>\n    <span className=\"text-red-400\">Q</span>\n  </span>;\n\nexport default function AuthPage() {\n  // const auth = useSelector(selectAuth);\n  const fromPath = useFromPath();\n  const auth = useAuthCtx();\n  // console.log(\"AuthPage:\", auth);\n\n  return (\n    <div>\n      <h1 {...cLo(\"bg-gradient-to-r from-white via-black to-white\",\n        \"text-lg text-center font-mono font-extrabold my-1\")}\n      >\n        <SpacetimeQText />\n        {fromPath && <div className=\"text-sm text-yellow-400\">{fromPath}</div>}\n      </h1>\n      {\n      auth.pending\n      ? <PendingDlg />\n      : auth.user\n        ? <LogoutForm user={auth.user} />\n        : <AuthForms />\n      }\n      {auth.error && <ErrorDlg error={auth.error} />}\n    </div>\n  );\n}\n","/*=============================================================================\n LikeButton.tsx - Like Button with animations\n\n - checked state is\n\n (C) 2021 SpacetimeQ INC.\n=============================================================================*/\n\nexport default function LikeButton({ id, onChange }: {\n  id: string;\n  onChange?: React.ChangeEventHandler<HTMLInputElement>;\n}) {\n  return (\n    <>\n      <input\n        type=\"checkbox\"\n        className=\"cb-like\"\n        id={id}\n        onChange={onChange}\n      />\n      <label htmlFor={id}>\n        <svg id=\"heart-like\" width=\"26\" viewBox=\"477 402 38 37\">\n          <g fill=\"none\" fillRule=\"evenodd\" transform=\"translate(467 392)\">\n            <path\n              id=\"heart-path\" fill=\"#AAB8C2\"\n              d=\"M29.144 20.773c-.063-.13-4.227-8.67-11.44-2.59C7.63 28.795 28.94 43.256 29.143 43.394c.204-.138 21.513-14.6 11.44-25.213-7.214-6.08-11.377 2.46-11.44 2.59z\"\n            />\n            <circle id=\"main-circ\" fill=\"#E2264D\" opacity=\"0\" cx=\"29.5\" cy=\"29.5\" r=\"1.5\"/>\n            <g id=\"grp1\" opacity=\"0\" transform=\"translate(24)\">\n              <circle id=\"oval1\" fill=\"#9FC7FA\" cx=\"2.5\" cy=\"3\" r=\"2\"/>\n              <circle id=\"oval2\" fill=\"#9FC7FA\" cx=\"7.5\" cy=\"2\" r=\"2\"/>\n            </g>\n            <g id=\"grp2\" opacity=\"0\" transform=\"translate(44 6)\">\n              <circle id=\"oval1\" fill=\"#CC8EF5\" cx=\"2\" cy=\"2\" r=\"2\"/>\n              <circle id=\"oval2\" fill=\"#CC8EF5\" cx=\"5\" cy=\"6\" r=\"2\"/>\n            </g>\n            <g id=\"grp3\" opacity=\"0\" transform=\"translate(52 28)\">\n              <circle id=\"oval1\" fill=\"#8CE8C3\" cx=\"4\" cy=\"2\" r=\"2\"/>\n              <circle id=\"oval2\" fill=\"#9CD8C3\" cx=\"2\" cy=\"7\" r=\"2\"/>\n            </g>\n            <g id=\"grp4\" opacity=\"0\" transform=\"translate(35 50)\">\n              <circle id=\"oval1\" fill=\"#F48EA7\" cx=\"6\" cy=\"5\" r=\"2\"/>\n              <circle id=\"oval2\" fill=\"#F48EA7\" cx=\"2\" cy=\"2\" r=\"2\"/>\n            </g>\n            <g id=\"grp5\" opacity=\"0\" transform=\"translate(14 50)\">\n              <circle id=\"oval1\" fill=\"#91D2FA\" cx=\"6\" cy=\"5\" r=\"2\"/>\n              <circle id=\"oval2\" fill=\"#91D2FA\" cx=\"2\" cy=\"2\" r=\"2\"/>\n            </g>\n            <g id=\"grp6\" opacity=\"0\" transform=\"translate(0 28)\">\n              <circle id=\"oval1\" fill=\"#CC8EF5\" cx=\"2\" cy=\"7\" r=\"2\"/>\n              <circle id=\"oval2\" fill=\"#91D2FA\" cx=\"3\" cy=\"2\" r=\"2\"/>\n            </g>\n            <g id=\"grp7\" opacity=\"0\" transform=\"translate(7 6)\">\n              <circle id=\"oval1\" fill=\"#9CD8C3\" cx=\"2\" cy=\"6\" r=\"2\"/>\n              <circle id=\"oval2\" fill=\"#8CE8C3\" cx=\"5\" cy=\"2\" r=\"2\"/>\n            </g>\n          </g>\n        </svg>\n      </label>\n    </>\n  );\n}\n","/*=============================================================================\n Dashboard/index.tsx - description\n\n (C) 2020 SpacetimeQ INC.\n=============================================================================*/\nimport { useState } from 'react';\nimport {\n  getPathD,\n  Svg6v24,\n} from 'utils/svg';\nimport LikeButton from 'ui/LikeButton';\nimport POST_DATA from './postDataTest.json';\n\ninterface IPostItemProps {\n  id:       string;\n  avatar:   string;\n  author:   string;\n  url:      string;\n  time:     string;\n  img:      string;\n  likes:    number;\n  comments: number;\n};\nconst PostItem: React.FC<IPostItemProps> = ({\n  id, avatar, author, url, time, img,\n  likes, comments,\n  children\n}) => {\n  const [cntLike, setCntLike] = useState(likes);\n  const [cntCmt,  setCntCmt]  = useState(comments);\n\n  const handleLike: React.ChangeEventHandler<HTMLInputElement> = (e) => {\n    setCntLike(cntLike + (e.target.checked ? 1 : -1));\n  }\n\n  return (\n    <div className=\"max-w-xl mx-auto mt-2 px-4 py-4 dark:bg-white bg-blue-100 shadow-md rounded-lg\">\n      <div className=\"py-2 flex flex-row items-center justify-between\">\n        <div className=\"flex flex-row items-center\">\n          <a href={url} className=\"flex flex-row items-center focus:outline-none focus:shadow-outline rounded-lg\">\n            <img className=\"rounded-full h-8 w-8 object-cover\" src={avatar} alt=\"avatar\" />\n            <p className=\"ml-2 text-base font-medium\">{author}</p>\n          </a>\n        </div>\n        <div className=\"flex flex-row items-center\">\n          <p className=\"text-xs font-semibold text-gray-500\">{time}</p>\n        </div>\n      </div>\n      <div className=\"mt-2\">\n        <img className=\"object-cover w-full rounded-lg\" src={img} alt=\"background\" />\n        <div className=\"py-2 flex flex-row items-center\">\n          <div\n            className=\"flex flex-row items-center focus:outline-none focus:shadow-outline rounded-lg\"\n          >\n            <LikeButton id={id} onChange={handleLike} />\n            <span className=\"ml-1\">{cntLike}</span>\n          </div>\n          <button\n            className=\"flex flex-row items-center focus:outline-none focus:shadow-outline rounded-lg ml-3\"\n            onClick={() => setCntCmt(cntCmt + 1)}\n          >\n            <Svg6v24\n              className=\"text-green-800\"\n              fill=\"rgba(0,128,0,.2)\"\n              d={getPathD(\"bubble_comment\")}\n            />\n            <span className=\"ml-1\">{cntCmt}</span>\n          </button>\n        </div>\n      </div>\n      <div className=\"py-2\">\n        <p className=\"leading-snug\">{children}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default function Dashboard() {\n  return (\n     <div className=\"flex-1 px-4 md:px-6 lg:px-8 overflow-y-auto\">\n       {POST_DATA.map(pd => {\n         const { id, content, ...rest } = pd;\n         return <PostItem key={id} id={id} {...rest}>{content}</PostItem>;\n       })}\n    </div>\n  );\n}\n","/*=============================================================================\n Calendar/index.tsx - Calendar\n\n (C) 2020 SpacetimeQ INC.\n=============================================================================*/\nimport { useState } from 'react';\nimport { cLo } from 'utils/util';\nimport { squareView, getPathD } from 'utils/svg';\nimport { IMouseProps } from 'common';\n\n// tailwind colorset\nconst tcsText = \"dark:text-white text-black\";\nconst tcsBorder = \"dark:border-gray-600 border-gray-300\";\n\nconst CalTHead = () => {\n  const week = [  // week name and additional attributes\n    { name: \"Sunday\",    attr: \"dark:text-red-400 text-red-500 font-bold\" },\n    { name: \"Monday\",    attr: tcsText},\n    { name: \"Tuesday\",   attr: tcsText},\n    { name: \"Wednesday\", attr: tcsText},\n    { name: \"Thursday\",  attr: tcsText},\n    { name: \"Friday\",    attr: tcsText},\n    { name: \"Saturday\",  attr: \"dark:text-blue-400 text-blue-500 font-bold\" }\n  ];\n\n  return (\n    <thead>\n      <tr>\n        {week.map((wk, i) =>\n          <th\n            key={i}\n            {...cLo(\"w-10 h-10 p-2 text-xs border xl:w-40 lg:w-30 md:w-30 sm:w-20 xl:text-sm\",\n              tcsBorder, \"dark:bg-gray-800 bg-gray-200\")}\n          >\n            <span {...cLo(\"hidden xl:block lg:block md:block sm:block\",    wk.attr)}>{wk.name}</span>\n            <span {...cLo(\"block xl:hidden lg:hidden md:hidden sm:hidden\", wk.attr)}>{wk.name.substr(0,3)}</span>\n          </th>\n        )}\n      </tr>\n    </thead>\n  );\n}\n\n/*\nconst eventData = [  // { start: datestring, duration: minutes, cat: , name: }\n  { start: \"2020-08-03 12:00\", duration: 120, cat: \"A\", name: \"Show\" },\n  { start: \"2020-08-07 12:00\", duration: 120, cat: \"B\", name: \"MT\" },\n  { start: \"2020-08-07 15:00\", duration:  60, cat: \"C\", name: \"MT\" },\n  { start: \"2020-08-07 16:00\", duration: 120, cat: \"D\", name: \"MT\" },\n  { start: \"2020-08-17 14:00\", duration: 120, cat: \"D\", name: \"TV\" },\n  { start: \"2020-08-22 12:00\", duration: 120, cat: \"E\", name: \"Vote\" },\n];\n*/\n\nconst CalTBody = () => {\n  //const lns = [];\n\n  // category, name, time\n  type TEventInfo = Record<'cat' | 'name' | 'time', string>;\n\n  type TDateInfo = {\n    date:  number;\n    evList?: TEventInfo[];\n  };\n\n  const WeekRow = ({ aDI }: {\n    aDI: TDateInfo[]\n  }) => {\n    return (\n      <tr className=\"h-20 text-center\">\n        {aDI.map((di, i) =>\n        <td\n          key={i}\n          {...cLo(\"w-10 h-40 p-1 overflow-auto border cursor-pointer xl:w-40 lg:w-30 md:w-30 sm:w-20\", tcsBorder,\n            \"transition duration-500 ease dark:hover:bg-gray-500 hover:bg-gray-300\")}\n        >\n          <div className=\"flex flex-col w-10 h-40 mx-auto overflow-hidden xl:w-40 lg:w-30 md:w-30 sm:w-full\">\n            <div className=\"w-full h-5 top\">\n              <span className=\"dark:text-gray-200 text-gray-500\">{di.date}</span>\n              {di.evList &&\n                di.evList.map((ev, j) => <EventNote key={j} event={ev} />)\n              }\n            </div>\n          </div>\n        </td>\n        )}\n      </tr>\n    );\n  }\n\n  const WEEK_DATA: TDateInfo[][] = [\n    [\n      { date: 30 },\n      { date: 31 },\n      { date:  1 },\n      { date:  2 },\n      { date:  3, evList: [ { cat: \"A\", name: \"Show\", time: \"12:00~14:00\" } ] },\n      { date:  4 },\n      { date:  5 },\n    ],\n    [\n      { date:  6 },\n      { date:  7, evList: [ { cat: \"B\", name: \"MT\", time: \"12:00~14:00\" },\n                            { cat: \"C\", name: \"MT\", time: \"15:00~16:00\" },\n                            { cat: \"D\", name: \"MT\", time: \"16:00~18:00\" } ] },\n      { date:  8 },\n      { date:  9 },\n      { date: 10 },\n      { date: 11 },\n      { date: 12 },\n    ],\n    [\n      { date: 13 },\n      { date: 14 },\n      { date: 15 },\n      { date: 16 },\n      { date: 17, evList: [ { cat: \"D\", name: \"TV\", time: \"14:00~16:00\" } ] },\n      { date: 18 },\n      { date: 19 },\n    ],\n    [\n      { date: 20 },\n      { date: 21 },\n      { date: 22, evList: [ { cat: \"E\", name: \"Voting\", time: \"12:00~14:00\" } ] },\n      { date: 23 },\n      { date: 24 },\n      { date: 25 },\n      { date: 26 },\n    ],\n    [\n      { date: 27 },\n      { date: 28 },\n      { date: 29 },\n      { date: 30 },\n      { date:  1 },\n      { date:  2 },\n      { date:  3 },\n    ],\n  ];\n\n  const EventNote = ({ event }: { event: TEventInfo }) => {\n    const palette = () => {\n      switch (event.cat) {\n        case 'A': return 'bg-purple-400';\n        case 'B': return 'bg-purple-700';\n        case 'C': return 'bg-green-400';\n        case 'D': return 'bg-blue-400';\n        case 'E': return 'bg-yellow-500';\n        default:  return 'bg-gray-400';\n      }\n    };\n    return (\n      <div {...cLo(\"p-1 mb-1 text-sm text-white rounded-lg\", palette())}>\n        <span className=\"font-bold\">{event.name}</span>\n        <span className=\"text-xs text-blue-100\">{' '}{event.time}</span>\n      </div>\n    );\n  }\n\n  return (\n    <tbody>\n      {WEEK_DATA.map((wk, i) => <WeekRow key={i} aDI={wk} />)}\n    </tbody>\n  );\n}\n\n// With the left arrow, generate 4 directional arrows\nconst ButtonArrow = ({ dir, onClick }: {\n  dir: 'L' | 'R' | 'U' | 'D'  // Left, Right, Up, Down\n} & IMouseProps) => {\n  const angle = (dir === 'L')\n    ? 0\n    : (dir === 'R')\n      ? 180\n      : (dir === 'U')\n        ? 90\n        : -90; // Up, Down not implemented yet\n  return (\n    <button className=\"p-1 hover:text-yellow-400\" onClick={onClick}>\n      <svg\n        {...squareView(\"1.2rem\", 16)} className=\"fill-current\"\n        transform={`rotate(${angle})`}\n      >\n        <path fillRule=\"evenodd\" d={getPathD(\"arrow_circle\")} />\n      </svg>\n    </button>\n  );\n}\n\nexport default function Calendar() {\n  // month count from the current month\n  const [month, setMonth] = useState(1);\n  const mTest = [\n    \"January 2021\",\n    \"February 2021\",\n    \"March 2021\",\n    \"April 2021\",\n  ];\n  return (\n    <div {...cLo(\"flex items-center justify-center h-screen overflow-y-scroll\",\n      \"dark:bg-gray-800 bg-gray-200\")}\n    >\n      <div className=\"flex items-start justify-center w-screen h-screen p-2\">\n        <div className=\"container w-full\">\n          <div\n            {...cLo(\"flex justify-between p-1 mt-2 rounded-t-xl\",\n              \"dark:text-gray-900 dark:bg-gray-200 text-gray-50 bg-gray-800\")}\n          >\n            <span {...cLo(\"ml-3 text-xl font-bold\")}>\n              {mTest[Math.abs(month % mTest.length)]}\n            </span>\n            <div>\n              <ButtonArrow dir='L' onClick={(_e) => setMonth(month - 1)}/>\n              <ButtonArrow dir='R' onClick={(_e) => setMonth(month + 1)}/>\n            </div>\n          </div>\n          <table className=\"w-full dark:bg-gray-800 bg-gray-50 mb-2\">\n            <CalTHead />\n            <CalTBody />\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/*=============================================================================\n Timeline - infographics\n\n (C) 2020 SpacetimeQ INC.\n=============================================================================*/\nimport {\n  cLo\n} from 'utils/util';\nimport TIMELINE_DATA from './timelineDataTest.json';\n\ninterface ITimelineItemProps {\n  time?:  string;\n  pos:    0 | 1 | 2 | 3;   // even: left, odd: right (for extension with various colorsets)\n  title?: string;\n};\nconst TimelineItem: React.FC<ITimelineItemProps> = ({ time, pos, title, children }) => {\n  const clrSet = [\n    { fg: \"text-white\",    bg: \"bg-red-400\" },\n    { fg: \"text-gray-800\", bg: \"bg-gray-400\" },\n    { fg: \"text-white\",    bg: \"bg-blue-500\" },\n    { fg: \"text-gray-100\", bg: \"bg-green-600\" },\n  ];\n  return (\n    <div\n      {...cLo(\"mb-8 flex justify-between items-center w-full\",\n        (pos % 2 === 0) && \"flex-row-reverse\")}\n    >\n      <div className=\"order-1 w-5/12\" />\n      {time &&\n      <div className=\"z-10 flex items-center order-1 bg-gray-800 shadow-xl w-12 h-12 rounded-full\">\n        <h1 className=\"mx-auto font-semibold text-md text-white\">{time}</h1>\n      </div>}\n      <div {...cLo(\"order-1 bg-gray-400 rounded-lg shadow-xl w-5/12 px-6 py-4\", clrSet[pos].bg)}>\n        {title && <h3 {...cLo(\"mb-3 font-bold text-xl\", clrSet[pos].fg)}>{title}</h3>}\n        <p {...cLo(\"text-sm leading-snug tracking-wide\", clrSet[pos].fg)}>{children}</p>\n      </div>\n    </div>\n  );\n}\n\ninterface ITimelineData extends ITimelineItemProps {\n  id:      number;\n  content: string;\n};\n\nexport default function Timeline() {\n  return (\n    <div className=\"dark:bg-gray-500 bg-gray-200 mx-auto\">\n      <div className=\"relative wrap p-10 h-full\">\n        <div\n          className=\"absolute border-l-2 border-opacity-80 border-gray-700 h-full border\"\n          style={{left: \"50%\"}}\n        />\n        {(TIMELINE_DATA as ITimelineData[]).map(td => {\n          const { id, content, ...rest } = td;\n          return <TimelineItem key={id} {...rest}>{content}</TimelineItem>;\n        })}\n      </div>\n    </div>\n  );\n}\n","/*=============================================================================\n Chat/chat-gadgets.tsx - Buttons and Icons\n\n (C) 2020 SpacetimeQ INC.\n=============================================================================*/\nimport { cLo } from 'utils/util';\nimport {\n  viewBox,\n  TPathDataKey,\n  getPathD,\n} from 'utils/svg';\n\nexport const borderColor = (idx: number) => {\n  // For tailwindcss, class names should appear in entirety not to be omitted in production code.\n  const BORDER_COLOR_LIST = [\n    \"dark:border-yellow-300 border-yellow-700\",\n    \"dark:border-red-300 border-red-700\",\n    \"dark:border-orange-300 border-orange-700\",\n    \"dark:border-green-400 border-green-700\",\n    \"dark:border-teal-200 border-teal-700\",\n    \"dark:border-blue-400 border-blue-700\",\n    \"dark:border-indigo-500 border-indigo-700\",\n  ];\n  return BORDER_COLOR_LIST[(idx >= 0) ? idx % BORDER_COLOR_LIST.length : 0];\n}\n\ninterface IAvatarImgProps {\n  url  :   string;\n  size?:   string;   // size (width and height) class\n  show?:   boolean;  // show img? or empty just for the layout (for consecutive tweets)\n  bdrClr?: string;   // border color class\n};\nexport function AvatarImg ({\n  url,\n  size = \"w-10 h-10\",  // size for the Chat panel\n  show = true,\n  bdrClr\n}: IAvatarImgProps) {\n  return (\n    <div {...cLo(\"relative flex flex-shrink-0 mr-2\", size)}>\n      {show &&\n        <img\n          {...cLo(\"object-cover w-full h-full rounded-lg shadow-md\", bdrClr, bdrClr && 'border-2')}\n          src={url}\n          alt=\"\"\n        />}\n    </div>\n  );\n}\n\n/*\nconst AvatarComposition = ({ img, im2, on }: {\n  img:  string,   // first image url\n  im2?: string,   // second image url\n  on?:  boolean,  // is online\n}) => {\n  return (\n    <div className=\"relative flex flex-shrink-0 w-12 h-12\">\n      <img\n        className={\"object-cover rounded-md shadow-md \" + (im2 ? \"absolute w-8 h-8 ml-4\" : \"w-full h-full \")}\n        src={img}\n        alt=\"avatar\"\n      />\n      {im2 &&\n        <img\n          className=\"absolute object-cover w-8 h-8 mt-4 rounded-lg shadow-md\"\n          src={im2}\n          alt=\"second avatar\"\n        />\n      }\n      {on &&\n        <div className=\"absolute bottom-0 right-0 p-1 bg-gray-900 rounded-full animate-pulse\">\n          <div className=\"w-3 h-3 bg-green-500 rounded-full\" />\n        </div>\n      }\n    </div>\n  );\n}\n*/\n\ninterface IStyleProps { style?: string; }\nexport const SvgIcon = ({\n  vLen = 20,\n  path,\n  style = \"text-blue-500\"\n}: {\n  vLen?: number,\n  path:  TPathDataKey    // path name defined in paths.json\n} & IStyleProps) =>\n  <svg {...viewBox(vLen)} {...cLo(\"w-full h-full fill-current\", style)}>\n    <path d={getPathD(path)} />\n  </svg>;\n//\n\nexport const SvgIconWrite = () =>\n  <svg className=\"w-full h-full fill-current\" {...viewBox(24)}>\n    <path d=\"M6.3 12.3l10-10a1 1 0 0 1 1.4 0l4 4a1 1 0 0 1 0 1.4l-10 10a1 1 0 0 1-.7.3H7a1 1 0 0 1-1-1v-4a1 1 0 0 1 .3-.7zM8 16h2.59l9-9L17 4.41l-9 9V16zm10-2a1 1 0 0 1 2 0v6a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V6c0-1.1.9-2 2-2h6a1 1 0 0 1 0 2H4v14h14v-6z\" />\n  </svg>;\n\nexport const SvgIconSearch = () =>\n  <svg className=\"w-full h-full fill-current\" {...viewBox(24)}>\n    <path fill=\"#bbb\" d=\"M16.32 14.9l5.39 5.4a1 1 0 0 1-1.42 1.4l-5.38-5.38a8 8 0 1 1 1.41-1.41zM10 16a6 6 0 1 0 0-12 6 6 0 0 0 0 12z\" />\n  </svg>;\n\nexport const SvgIconPlus = () =>\n  <svg className=\"w-full h-full fill-current\" {...viewBox(24)}>\n    <path d=\"M17 11a1 1 0 0 1 0 2h-4v4a1 1 0 0 1-2 0v-4H7a1 1 0 0 1 0-2h4V7a1 1 0 0 1 2 0v4h4z\"/>\n  </svg>;\n\nexport const SvgIconPlusCircle = () =>\n  <svg className=\"w-full h-full fill-current\" {...viewBox(20)}>\n    <path d=\"M10,1.6c-4.639,0-8.4,3.761-8.4,8.4s3.761,8.4,8.4,8.4s8.4-3.761,8.4-8.4S14.639,1.6,10,1.6z M15,11h-4v4H9 v-4H5V9h4V5h2v4h4V11z\"/>\n  </svg>;\n\nexport const SvgIconPhone    = ({ style }: IStyleProps) => <SvgIcon path=\"phone_handset\" style={style} />;\nexport const SvgIconCamcoder = ({ style }: IStyleProps) => <SvgIcon path=\"camcoder_1\"    style={style} />;\nexport const SvgIconInfo     = ({ style }: IStyleProps) => <SvgIcon path=\"i_info\"        style={style} />;\n\nexport const SvgIconEllipsis = () =>\n  <svg viewBox=\"0 0 20 20\" className=\"w-full h-full fill-current\">\n    <path d=\"M10.001,7.8C8.786,7.8,7.8,8.785,7.8,10s0.986,2.2,2.201,2.2S12.2,11.215,12.2,10S11.216,7.8,10.001,7.8z M3.001,7.8C1.786,7.8,0.8,8.785,0.8,10s0.986,2.2,2.201,2.2S5.2,11.214,5.2,10S4.216,7.8,3.001,7.8z M17.001,7.8 C15.786,7.8,14.8,8.785,14.8,10s0.986,2.2,2.201,2.2S19.2,11.215,19.2,10S18.216,7.8,17.001,7.8z\" />\n  </svg>;\n\nexport const SvgIconReply = () =>\n  <svg viewBox=\"0 0 20 20\" className=\"w-full h-full fill-current\">\n    <path d=\"M19,16.685c0,0-2.225-9.732-11-9.732V2.969L1,9.542l7,6.69v-4.357C12.763,11.874,16.516,12.296,19,16.685z\" />\n  </svg>;\n\nexport const SvgIconSmile = () =>\n  <svg viewBox=\"0 0 24 24\" className=\"w-full h-full fill-current\">\n    <path d=\"M12 22a10 10 0 1 1 0-20 10 10 0 0 1 0 20zm0-2a8 8 0 1 0 0-16 8 8 0 0 0 0 16zm-3.54-4.46a1 1 0 0 1 1.42-1.42 3 3 0 0 0 4.24 0 1 1 0 0 1 1.42 1.42 5 5 0 0 1-7.08 0zM9 11a1 1 0 1 1 0-2 1 1 0 0 1 0 2zm6 0a1 1 0 1 1 0-2 1 1 0 0 1 0 2z\" />\n  </svg>;\n\nexport const SvgIconPicture = () =>\n  <svg viewBox=\"0 0 20 20\" className=\"w-full h-full fill-current\">\n    <path d=\"M11,13 L8,10 L2,16 L11,16 L18,16 L13,11 L11,13 Z M0,3.99406028 C0,2.8927712 0.898212381,2 1.99079514,2 L18.0092049,2 C19.1086907,2 20,2.89451376 20,3.99406028 L20,16.0059397 C20,17.1072288 19.1017876,18 18.0092049,18 L1.99079514,18 C0.891309342,18 0,17.1054862 0,16.0059397 L0,3.99406028 Z M15,9 C16.1045695,9 17,8.1045695 17,7 C17,5.8954305 16.1045695,5 15,5 C13.8954305,5 13,5.8954305 13,7 C13,8.1045695 13.8954305,9 15,9 Z\" />\n  </svg>;\n\nexport const SvgIconCamera = () =>\n  <svg viewBox=\"0 0 20 20\" className=\"w-full h-full fill-current\">\n    <path d=\"M0,6.00585866 C0,4.89805351 0.893899798,4 2.0048815,4 L5,4 L7,2 L13,2 L15,4 L17.9951185,4 C19.102384,4 20,4.89706013 20,6.00585866 L20,15.9941413 C20,17.1019465 19.1017876,18 18.0092049,18 L1.99079514,18 C0.891309342,18 0,17.1029399 0,15.9941413 L0,6.00585866 Z M10,16 C12.7614237,16 15,13.7614237 15,11 C15,8.23857625 12.7614237,6 10,6 C7.23857625,6 5,8.23857625 5,11 C5,13.7614237 7.23857625,16 10,16 Z M10,14 C11.6568542,14 13,12.6568542 13,11 C13,9.34314575 11.6568542,8 10,8 C8.34314575,8 7,9.34314575 7,11 C7,12.6568542 8.34314575,14 10,14 Z\" />\n  </svg>;\n\nexport const SvgIconMic = () =>\n  <svg viewBox=\"0 0 20 20\" className=\"w-full h-full fill-current\">\n    <path d=\"M9,18 L9,16.9379599 C5.05368842,16.4447356 2,13.0713165 2,9 L4,9 L4,9.00181488 C4,12.3172241 6.6862915,15 10,15 C13.3069658,15 16,12.314521 16,9.00181488 L16,9 L18,9 C18,13.0790094 14.9395595,16.4450043 11,16.9378859 L11,18 L14,18 L14,20 L6,20 L6,18 L9,18 L9,18 Z M6,4.00650452 C6,1.79377317 7.79535615,0 10,0 C12.209139,0 14,1.79394555 14,4.00650452 L14,8.99349548 C14,11.2062268 12.2046438,13 10,13 C7.790861,13 6,11.2060545 6,8.99349548 L6,4.00650452 L6,4.00650452 Z\" />\n  </svg>;\n\nexport const SvgIconThumbUp = () =>\n  <svg viewBox=\"0 0 20 20\" className=\"w-full h-full fill-current\">\n    <path d=\"M11.0010436,0 C9.89589787,0 9.00000024,0.886706352 9.0000002,1.99810135 L9,8 L1.9973917,8 C0.894262725,8 0,8.88772964 0,10 L0,12 L2.29663334,18.1243554 C2.68509206,19.1602453 3.90195042,20 5.00853025,20 L12.9914698,20 C14.1007504,20 15,19.1125667 15,18.000385 L15,10 L12,3 L12,0 L11.0010436,0 L11.0010436,0 Z M17,10 L20,10 L20,20 L17,20 L17,10 L17,10 Z\" />\n  </svg>;\n","/*=============================================================================\n chat/LeftPane.tsx - \n\n (C) 2020 SpacetimeQ INC.\n=============================================================================*/\nimport {\n  useEffect,\n  useRef,\n} from 'react';\nimport {\n  // SvgIconSearch,\n  // SvgIconPlus,\n  SvgIconWrite,\n  // SvgIconEllipsis,\n  // SvgIconCamera,\n  // SvgIconMic,\n  borderColor,\n  AvatarImg,\n} from './chat-gadgets';\nimport {\n  cLo,\n  timeStr,\n} from 'utils/util';\nimport { useAppDispatch } from 'app/store';\nimport { useSelector } from 'react-redux';\nimport {\n  enterRoom,\n  selectRoomId,\n} from 'features/msgs/msgsSlice';\n\n/*\nconst SearchBox = () => {\n  return (\n    <div className=\"flex-none p-4 search-box\">\n      <form onSubmit={(_ev: React.FormEvent<HTMLFormElement>) =>\n        {console.log(\"Form onSubmit\")}} >\n        <div className=\"relative\">\n          <label>\n            <input\n              className={\"w-full py-2 pl-10 pr-6 text-gray-200 bg-gray-800 border border-gray-800 rounded-full \" +\n                \"focus:border-gray-700 focus:bg-gray-900 focus:outline-none focus:shadow-md transition duration-300 ease-in\"}\n              type=\"text\"\n              value=\"\"\n              onChange={e => console.log(e.target.value)}\n              placeholder=\"Search Messenger\"\n            />\n            <span className=\"absolute top-0 left-0 inline-block mt-2 ml-3 h-6 w-6\">\n              <SvgIconSearch />\n            </span>\n          </label>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nconst ActiveUserList = () => {\n  return (\n    <div className=\"flex flex-row w-0 min-w-full p-2 overflow-auto\">\n      <div className=\"mr-4 text-sm text-center\">\n        <button\n          className=\"flex flex-shrink-0 block w-16 h-16 text-gray-600 bg-gray-800 rounded-full focus:outline-none\"\n          type=\"button\"\n        >\n          <SvgIconPlus />\n        </button>\n      </div>\n      {TESTDATA.UserDemo.filter(u => (u.on || u.ping)).map((u, i) =>\n        <div key={i} className=\"mr-2 text-sm text-center\">\n          <div className={\"border-4 rounded-lg \" + (u.ping ? \"border-blue-500\" : \"border-transparent\")}>\n            <AvatarComposition img={u.img} im2={u.im2} on={u.on} />\n          </div>\n          <p>{u.name.split(' ')[0]}</p>\n        </div>\n      )}\n    </div>\n  );\n}\n\nconst UserList = () => {\n  return (\n    <div className=\"flex-1 p-2 overflow-y-scroll contacts\">\n      {TESTDATA.UserDemo.map((u, i) =>\n      <div key={i} className=\"relative flex items-center justify-between p-2 hover:bg-gray-800\">\n          <AvatarComposition img={u.img} im2={u.im2} on={u.on} />\n            <div className=\"flex-auto hidden min-w-0 ml-4 mr-6 md:block group-hover:block\">\n            <p>{u.name}</p>\n            <div className={\"flex items-center text-sm \" + (u.ping ? \"font-bold\" : \"text-gray-600\")} >\n              <div className=\"min-w-0\">\n                <p className=\"truncate\">{u.text}</p>\n              </div>\n              <p className=\"ml-2 font-thin whitespace-no-wrap\">{u.time}</p>\n            </div>\n          </div>\n          {u.ping &&\n            <div className=\"flex flex-shrink-0 hidden w-3 h-3 bg-blue-700 rounded-full animate-pulse md:block group-hover:block\" />\n          }\n        </div>\n      )}\n    </div>\n  );\n}\n*/\n\nconst LeftPaneHead: React.FC = (props) => {\n  const urlDest = \"http://localhost:3000\";\n  return (\n    <div {...cLo(\"flex flex-row items-center justify-between flex-none pr-2\",\n          \"dark:bg-gray-800 bg-gray-300\")}\n    >\n      <div className=\"relative flex flex-shrink-0 w-12 h-12\">\n        <img\n          className=\"object-cover w-full h-full\"\n          alt=\"room\"\n          src={\"https://scx2.b-cdn.net/gfx/news/hires/2009/spacetime.jpg\"}\n        />\n      </div>\n      <p className=\"hidden font-bold text-md md:block group-hover:block\">\n        {props.children}\n      </p>\n      <a\n        href={urlDest}\n        {...cLo(\"hidden block w-10 h-10 p-2 rounded-full md:block group-hover:block\",\n            \"dark:bg-gray-800 dark:hover:bg-gray-700\",\n            \"bg-gray-300 hover:bg-gray-400\")}\n      >\n        <SvgIconWrite />\n      </a>\n    </div>\n  );\n}\n\nconst RoomUsersList = () => {\n  const UsersList = [\n    {\n      \"id\": \"simon\",\n      \"name\": \"Shiba Inu\",\n      \"avatar\": \"https://randomuser.me/api/portraits/men/9.jpg\",\n      \"location\": \"Yokohama\",\n      \"timestamp\": \"2020-06-10T18:25:43.511Z\",\n      \"profile\": \"programmer\"\n    },\n    {\n      \"id\": \"conan\",\n      \"name\": \"江戸川コナン\",\n      \"avatar\": \"https://randomuser.me/api/portraits/men/1.jpg\",\n      \"location\": \"Tokyo\",\n      \"timestamp\": \"2020-06-11T12:25:43.511Z\",\n      \"profile\": \"detective\"\n    },\n    {\n      \"id\": \"ran\",\n      \"name\": \"毛利 蘭\",\n      \"avatar\": \"https://randomuser.me/api/portraits/women/17.jpg\",\n      \"location\": \"New York\",\n      \"timestamp\": \"2020-06-11T13:25:43.511Z\",\n      \"profile\": \"high school student\"\n    },\n  ];\n  const CONTEXTMENU = 'contextmenu';\n  const ref = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const handleContextMenu: EventListener = (e) => {\n      e.preventDefault();\n      console.log(CONTEXTMENU);\n    }\n    const el = ref.current;\n    el?.addEventListener(CONTEXTMENU, handleContextMenu);\n    return () => {\n      el?.removeEventListener(CONTEXTMENU, handleContextMenu);\n    }\n  }, []);\n\n  return (\n    <div ref={ref} className=\"flex-1 p-2 overflow-y-scroll contacts\">\n      {UsersList.map((u, i) =>\n        <div key={u.id} className=\"relative flex items-center justify-between p-1 dark:hover:bg-gray-800 hover:bg-gray-300\">\n          <AvatarImg url={u.avatar} size=\"w-12 h-12\" bdrClr={borderColor(i)} />\n          <div className=\"flex-auto hidden min-w-0 mx-1 md:block group-hover:block\">\n            <span className=\"font-mono text-sm dark:text-blue-300 text-blue-600 mr-1\">\n              {u.id}\n            </span>\n            {u.name}\n            <div className=\"flex items-center text-sm dark:text-gray-100 text-gray-700\">\n              <div className=\"min-w-0\">\n                <p className=\"dark:text-blue-200 text-blue-600\">{u.location}</p>\n              </div>\n              <p className=\"ml-2 text-xs whitespace-nowrap dark:text-green-400 text-green-700\">\n                {timeStr(u.timestamp)}\n              </p>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nconst RoomsList = () => {\n  const RoomsList = [\n    {\n      \"id\": \"tprYAJxY2blNg1X1cT5z\",\n      \"title\": \"First Room\",\n      \"img\": \"https://www.flaticon.com/premium-icon/icons/svg/2179/2179306.svg\",\n      \"timestamp\": \"2020-06-11T13:25:43.511Z\",\n    },\n    {\n      \"id\": \"HgOCHACGcol4jj3gxoLW\",\n      \"title\": \"STQ Dev Session\",\n      \"img\": \"https://www.flaticon.com/svg/vstatic/svg/166/166908.svg?token=exp=1612135303~hmac=61afc7003feb9745d6ccb5f3e35bcb21\",\n      \"timestamp\": \"2021-01-31T09:12:11.511Z\",\n    },\n  ];\n  const CONTEXTMENU = 'contextmenu';\n  const ref = useRef<HTMLDivElement>(null);\n  const curRoomId = useSelector(selectRoomId);\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    const handleContextMenu: EventListener = (e) => {\n      e.preventDefault();\n      console.log(CONTEXTMENU);\n    }\n    const el = ref.current;\n    el?.addEventListener(CONTEXTMENU, handleContextMenu);\n    return () => {\n      el?.removeEventListener(CONTEXTMENU, handleContextMenu);\n    }\n  }, []);\n\n  const onClickHandle = (roomId: string) => {\n    if (roomId !== curRoomId)\n      dispatch( enterRoom(roomId) );\n  }\n\n  return (\n    <div ref={ref} className=\"flex-1 p-2 overflow-y-scroll contacts\">\n      {RoomsList.map((rm, i) =>\n        <div\n          key={rm.id}\n          {...cLo(\"relative flex items-center justify-between p-1 cursor-pointer\",\n            \"dark:hover:bg-gray-800 hover:bg-gray-300\",\n            (rm.id === curRoomId) && \"dark:bg-blue-600 bg-blue-200 dark:hover:bg-blue-800 hover:bg-blue-300\")}\n          onClick={() => onClickHandle(rm.id)}\n        >\n          <AvatarImg url={rm.img} size=\"w-12 h-12\" bdrClr={borderColor(i)} />\n          <div className=\"flex-auto hidden min-w-0 mx-1 md:block group-hover:block\">\n            {rm.title}\n            <div className=\"flex items-center text-sm dark:text-gray-100 text-gray-700\">\n              <p className=\"ml-2 text-xs whitespace-nowrap dark:text-green-400 text-green-700\">\n                {timeStr(rm.timestamp)}\n              </p>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default function LeftPane() {\n  return (\n    <>\n      <LeftPaneHead>Members</LeftPaneHead>\n      <RoomUsersList />\n      <LeftPaneHead>Sessions</LeftPaneHead>\n      <RoomsList />\n    </>\n  );\n}\n","/*=============================================================================\n chat/RightPane.tsx - Right pane of the chat window\n\n (C) 2020 SpacetimeQ INC.\n=============================================================================*/\nimport {\n  SvgIconPlusCircle,\n  SvgIconWrite,\n  SvgIconPhone,\n  SvgIconInfo,\n} from './chat-gadgets';\nimport { cCo } from 'utils/util';\n\nconst ProfileView = () => {\n  const urlDest = \"http://localhost:3000\";\n  const profile = [\n    { icon: <SvgIconInfo />,       title: \"Bio\",          text: \"25 y.o traveler\"},\n    { icon: <SvgIconWrite />,      title: \"Username\",     text: \"@karen\"},\n    { icon: <SvgIconPhone />,      title: \"Phone\",        text: \"+1 3859 273 1831\"},\n    { icon: <SvgIconPlusCircle />, title: \"Notification\", text: \"Enabled\"},\n  ];\n  const menu = [\n    { url: urlDest, text: \"Media\" },\n    { url: urlDest, text: \"Docs\" },\n    { url: urlDest, text: \"Links\" },\n    { url: urlDest, text: \"Audio\" },\n  ];\n\n  return (\n    <nav className=\"right-0 flex flex-col w-full bg-gray-900 text-gray-300 border-l border-gray-600\">\n      <div className=\"h-6 flex items-center justify-between w-full p-3\">\n      <div className=\"ml-4 mr-auto text-lg font-medium\">Info</div>\n\n      </div>\n      <div>\n        <div className=\"flex justify-center mb-4\">\n          <button\n            type=\"button\"\n            className=\"content-center block w-32 h-32 p-1 overflow-hidden text-center rounded-md focus:outline-none\"\n          >\n            <img\n              className=\"content-center object-cover w-full h-full border-3 border-gray-400 rounded-md\"\n              src=\"shiba.jpg\"\n              alt=\"\"\n            />\n          </button>\n        </div>\n        <p className=\"text-lg font-semibold text-center text-gray-300\">Shiba K.</p>\n        <p className=\"text-sm font-medium text-center text-blue-500\">online</p>\n      </div>\n      {profile.map((pf, i) =>\n        <div key={i} className=\"flex items-center w-full px-3 mt-6\">\n          <div className=\"px-2 w-8 h-8\">\n            {pf.icon}\n          </div>\n          <div className=\"ml-4\">\n            <div className=\"mr-auto text-sm font-semibold text-gray-300\">{pf.text}</div>\n            <div className=\"mt-1 mr-auto text-sm font-semibold leading-none text-gray-600\">{pf.title}</div>\n          </div>\n        </div>\n      )}\n      <ul className=\"flex flex-row items-center justify-around px-3 mb-1 list-none border-b select-none\">\n        {menu.map((m, i) => \n          <li key={m.text} className=\"flex-auto px-4 mx-1 -mb-px text-center rounded-t-lg cursor-pointer last:mr-0 hover:bg-gray-200\">\n            <a href={m.url} {...cCo(\"block py-3 text-xs font-bold leading-normal uppercase border-b-4\",\n              i === 1, \"text-blue-500 border-blue-500\", \"border-transparent\")}\n            >\n              {m.text}\n            </a>\n          </li>\n        )}\n      </ul>\n    </nav>\n  );\n}\n\nexport default function RightPane() {\n  return (\n    <>\n      <ProfileView />\n    </>\n  );\n}\n","/*=============================================================================\n ChatBubble.tsx - ChatBubble\n\n (C) 2020 SpacetimeQ INC.\n=============================================================================*/\nimport {\n  cC, cCo, cL, cLo,\n  timeStr,\n} from 'utils/util';\nimport {\n  IMsg,\n  IButtonProps,\n} from 'common';\nimport {\n  SvgIconReply,\n  SvgIconSmile,\n} from './chat-gadgets';\n\nconst ChatReactions = () => {\n  // SvgIcon Wrapper\n  const ButtonResponse: React.FC<Partial<IButtonProps>> = ({ onClick, children }) => {\n    return (\n      <button\n        type=\"button\"\n        {...cLo(\"flex flex-shrink-0 hidden block w-6 h-6 p-1 mx-0.5 rounded-full\",\n          \"dark:text-gray-500 dark:bg-gray-800 text-gray-600 border border-gray-400\",\n          \"group-hover:block focus:outline-none\",\n          \"dark:hover:text-gray-900 dark:hover:bg-gray-700\",\n          \"hover:text-gray-600 hover:bg-gray-400 shadow-md\")}\n        onClick={onClick}\n      >\n        {children}\n      </button>\n    );\n  }\n\n  return (\n    <>\n      <ButtonResponse onClick={_e => console.log(\"Reply\")}>\n        <SvgIconReply />\n      </ButtonResponse>\n      <ButtonResponse onClick={_e => console.log(\"Smile\")}>\n        <SvgIconSmile />\n      </ButtonResponse>\n    </>\n  );\n}\n\nconst ChatBubble = ({ m, idSelf, isNewId, bdrClr }: {\n  m:       IMsg,     // message\n  idSelf:  boolean,  // sender is self\n  isNewId: boolean,  // if the sender is different from the previous\n  bdrClr:  string    // border color class\n}) => {\n  return (\n    <div {...cCo(cC(\"text-sm grid grid-flow-row gap-1\", idSelf,\n                \"dark:text-white text-black\", \"dark:text-gray-700 text-gray-800\"),\n      isNewId, 'mt-1', 'mt-0')}>\n      <div {...cCo(\"group flex items-center\", idSelf, \"flex-row-reverse\")}>\n        <div className=\"flex flex-col\">\n          {m.text &&\n          <div {...cCo(cL(\"max-w-xs px-2 py-2 rounded-xl lg:max-w-md border-b border-opacity-40\", bdrClr),\n                  idSelf,\n                  \"dark:bg-blue-700 bg-blue-200 rounded-tr-none border-r-2\",\n                  \"dark:text-gray-200 dark:bg-gray-800 text-gray-800 bg-gray-50 rounded-tl-none border-l-4\")}\n            >\n              {isNewId && <span className=\"font-mono dark:text-blue-300 text-blue-700\">{m.sender + ' '}</span>}\n              {m.text}\n            </div>\n          }\n          {\n          m.img &&\n            <div {...cCo(\"flex items-center\", idSelf, \"flex-row-reverse\", \"flex-row\")}>\n              <a\n                {...cCo(cL(\"max-w-xs my-2 lg:max-w-md\", bdrClr), idSelf, 'border-r', 'border-l')}\n                href={m.img}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <img src={m.img} alt=\"\" width=\"100px\" />\n              </a>\n            </div>\n          }\n        </div>\n        <time\n          {...cCo(\"mx-1 text-xs\", idSelf,\n            \"dark:text-pink-200 text-pink-800\", \"dark:text-green-300 text-green-800\")}\n          dateTime={(new Date(m.time)).toISOString()}\n        >\n          {timeStr(m.time)}\n        </time>\n        {!idSelf && <ChatReactions />}\n      </div>\n    </div>\n  );\n}\n\nexport default ChatBubble;\n","/*=============================================================================\n chat/Chat.tsx - Chat Main Window\n\n (C) 2020 SpacetimeQ INC.\n=============================================================================*/\nimport {\n  useState,\n  useRef,\n} from 'react';\nimport {\n  TKeyboardInputHandler\n} from 'common';\nimport {\n  SvgIconWrite,\n  SvgIconSmile,\n  SvgIconPicture,\n} from './chat-gadgets';\nimport { cL, cLo } from 'utils/util';\n\nexport default function ChatInputControl ({ onSubmit }: {\n  onSubmit: (text: string) => void\n}) {\n  //console.log(\"ChatInputControl\");\n  // input on focus or out of focus\n  const [noCompo, setNoCompo] = useState(true);  // not in IME composition mode\n  const [hasText, setHasText] = useState(false);\n  // text input editor DOM element, to get textContent and clear\n  const refEd = useRef<HTMLInputElement>(null);\n  const btnCls = cL(\n    \"flex flex-shrink-0 block w-6 h-6 mx-1 focus:outline-none\",\n    \"dark:text-gray-300 dark:hover:text-gray-600\",\n    \"text-gray-600 hover:text-black\"\n  );\n  // To check if in IME mode\n  const handleCompositionStart = () => {\n    console.log(\"compositionStart\");\n    setNoCompo(false);\n  }\n  const handleCompositionEnd = () => {\n    console.log(\"compositionEnd\");\n    setNoCompo(true);\n  }\n  const onClickEmoticon = () => {\n    console.log(\"Emoticon\");\n  }\n  const onClickPicture = () => {\n    console.log(\"Picture\");\n  }\n  const _sendText = () => {\n    const node = refEd.current;\n    const txt = node?.textContent;\n    if (txt && txt.length > 0) {\n      onSubmit(txt);\n      node!.innerHTML = ''; // clear current input\n      setHasText(false);\n    }\n  }\n  const submitText: TKeyboardInputHandler = (ev) => {\n    ev.preventDefault();\n    _sendText();\n  }\n  const handleKeyDown: TKeyboardInputHandler = (ev) => {\n    if ((noCompo && (ev.key === \"Enter\")) &&\n      !ev.shiftKey)  // Shift + ENTER will not end typing, next line\n      return submitText(ev);\n  }\n  const handleKeyUp: TKeyboardInputHandler = (ev) => {\n    const txt = (ev.target as HTMLInputElement).innerHTML;  // Type Assertion\n    setHasText(txt.length > 0 && txt !== '\\n');\n  }\n  return (\n    <div className=\"flex-none\">\n      <div {...cLo(\"flex flex-row items-center p-2 border-t\",\n        \"dark:bg-gray-800 dark:border-gray-600 bg-gray-400 border-gray-300\")}\n      >\n        <div className=\"relative flex-grow\">\n          <form>\n            <div\n              {...cLo(\"w-full py-2 pl-3 pr-10 border rounded-md\",\n                \"dark:text-gray-200 dark:bg-gray-800 dark:border-gray-700\",\n                \"dark:focus:border-gray-700 dark:focus:bg-gray-900\",\n                \"text-black bg-gray-200 border-gray-300\",\n                \"focus:border-gray-500 focus:bg-gray-50\",\n                \"focus:outline-none focus:shadow-md transition duration-200 ease-in\")}\n              ref={refEd}\n              tabIndex={0}\n              contentEditable=\"true\"\n              placeholder=\"Type in...\"\n              onCompositionStart={handleCompositionStart}\n              onCompositionEnd={handleCompositionEnd}\n              onKeyDown={handleKeyDown}\n              onKeyUp={handleKeyUp}\n            />\n            <button\n              type=\"button\"\n              {...cLo(btnCls, \"absolute top-0 right-0 mt-2 mr-3\", !hasText && \"opacity-20\")}\n              onClick={_sendText}\n            >\n              <SvgIconWrite />\n            </button>\n          </form>\n        </div>\n        <button type=\"button\" className={btnCls} onClick={onClickEmoticon}><SvgIconSmile /></button>\n        <button type=\"button\" className={btnCls} onClick={onClickPicture}><SvgIconPicture /></button>\n      </div>\n    </div>\n  );\n}\n","/*=============================================================================\n chat/Chat.tsx - Chat Main Window\n\n (C) 2020 SpacetimeQ INC.\n=============================================================================*/\nimport {\n  useRef,\n  useEffect,\n} from 'react';\nimport { useAuthCtx }     from 'app/AuthContext';\nimport { useAppDispatch } from 'app/store';\nimport { useSelector }    from 'react-redux';\nimport {\n  selectAllMsgs,\n  sendMsg,\n} from 'features/msgs/msgsSlice';\nimport {\n  SvgIconPhone,\n  SvgIconCamcoder,\n  SvgIconInfo,\n  borderColor,\n  AvatarImg,\n} from './chat-gadgets';\nimport {\n  cCo, cLo,\n} from 'utils/util';\nimport ChatBubble from './ChatBubble';\nimport ChatInputControl from './ChatInput';\n\nconst getUserIndex = (_uid: string) => {\n  // -1 when not found\n  // return TESTDATA.UsersList.findIndex(({ id }) => (id === uid));\n  return 0;\n}\n\nconst avatarSrc = (_idx: number) => {\n  // return (idx >= 0) ? TESTDATA.UsersList[idx].avatar : \"\";\n  return \"https://randomuser.me/api/portraits/men/9.jpg\";\n}\n\n// tailwind colorset\nconst tcsBgBorder = \"dark:border-gray-600 dark:bg-gray-800 border-gray-400 bg-gray-300\";\n\nconst ChatHead = () => {\n  const urlDest = \"http://localhost:3000\";\n  const linkedIcons = [\n    {  href: urlDest, icon: <SvgIconPhone /> },\n    {  href: urlDest, icon: <SvgIconCamcoder /> },\n    {  href: urlDest, icon: <SvgIconInfo /> },\n  ];\n  const nUsers = 3;\n  const nMsgs  = 20;\n\n  return (\n    <div\n      {...cLo(\"flex flex-row items-center justify-between flex-none px-2 shadow border-b\",\n          tcsBgBorder)}\n    >\n      <div className=\"flex\">\n        <AvatarImg url={\"https://scx2.b-cdn.net/gfx/news/hires/2009/spacetime.jpg\"} />\n        <div className=\"text-sm\">\n          <p className=\"font-bold\">{\"room.title\"}</p>\n          <p className=\"text-xs\">\n            <span className=\"font-bold dark:text-yellow-400 text-yellow-700\">{nUsers}</span> users{' '}\n            <span className=\"font-bold dark:text-blue-400 text-blue-700\">{nMsgs}</span> messages\n          </p>\n        </div>\n      </div>\n      <div className=\"flex\">\n        {linkedIcons.map((li, i) =>\n          <a\n            key={i}\n            href={li.href}\n            {...cLo('block w-6 h-6 p-1 rounded-full dark:bg-gray-800 dark:hover:bg-gray-600',\n              \"hover:bg-gray-300\",\n              (i > 0) && 'ml-1')}\n          >\n            {li.icon}\n          </a>\n        )}\n      </div>\n    </div>\n  );\n}\n\nconst ChatBody = () => {\n  const msgs = useSelector(selectAllMsgs);\n  const refW = useRef<HTMLDivElement>(null);  // for scroll control\n  const sender = useAuthCtx().user!.email!;\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    const node = refW.current;\n    if (node) {\n      node.scrollTop = node.scrollHeight;\n    }\n    // console.log(\"Scrolled to the bottom.\");\n  }); //, []);  // Run only initially once\n\n  const onNewMsg = (text: string) => {\n    const Commands = ['/', ':'];\n    const isCommand = (text && Commands.includes(text[0]));\n    if (isCommand) {\n      console.log(text.substring(1));\n    } else {\n      dispatch( sendMsg({ sender, text }) );\n    }\n  }\n\n  let idPrev: string0 = null;\n\n  return (\n    <>\n      <div ref={refW} className=\"flex-1 p-4 overflow-y-scroll\">\n        {msgs.map((m, i) => {\n          const idSelf  = m.sender === sender;\n          const isNewId = m.sender !== idPrev;\n          if (isNewId)\n            idPrev = m.sender;  // save the current id to check the changes at the next loop\n          const idx = getUserIndex(m.sender);\n          const bdrClr = borderColor(idx);\n          return (\n            <div key={i} {...cCo(\"flex flex-row\", idSelf, \"justify-end\", \"justify-start\")} >\n              {!idSelf && <AvatarImg url={avatarSrc(idx)} show={isNewId} bdrClr={bdrClr} />}\n              <ChatBubble {...{m, idSelf, isNewId, bdrClr}} />\n            </div>\n          );\n        })}\n      </div>\n      <ChatInputControl onSubmit={onNewMsg} />\n    </>\n  );\n}\n\nexport default function ChatPane() {\n  return (\n    <>\n      <ChatHead />\n      <ChatBody />\n    </>\n  );\n}\n","/*=============================================================================\n chat/Chat.tsx - Chat Main Window\n\n (C) 2020 SpacetimeQ INC.\n=============================================================================*/\nimport { useEffect } from 'react';\nimport LeftPane  from './LeftPane';\nimport RightPane from './RightPane';\nimport ChatPane  from './ChatPane';\nimport { cLo } from 'utils/util';\nimport { useMsgsRoom } from 'api/dataAPI';\n\n// tailwind colorset\nconst tcsBorder = \"dark:border-gray-800 border-gray-400\";\n\n// add custom breakpoint x2l: '1800px' to tailwind.config.js\nexport default function ChatMainWindow() {\n  // useMsgsRoom(\"tprYAJxY2blNg1X1cT5z\");\n  useMsgsRoom();\n  const hidden_col = \"flex flex-col flex-none hidden overflow-auto transition-all duration-300 ease-in-out\";\n  useEffect(() => {\n    console.log(\"Chat:useEffect()\");\n  });\n  return (\n    <div {...cLo(\"flex w-full overflow-hidden antialiased Sq_h-max\",\n          \"dark:text-gray-200 dark:bg-gray-900 text-gray-700 bg-gray-200\")}\n    >\n      <div className=\"flex flex-col flex-1\">\n        <main className=\"flex flex-row flex-grow min-h-0\">\n          <section {...cLo(hidden_col, \"md:max-w-xs sm:block border-r\", tcsBorder)}>\n            <LeftPane />\n          </section>\n          <section {...cLo(\"flex flex-col flex-auto xl:max-w-5xl border-l\", tcsBorder)}>\n            <ChatPane />\n          </section>\n          <section {...cLo(hidden_col, \"lg:max-w-sm xl:block\")}>\n            <RightPane />\n          </section>\n        </main>\n      </div>\n    </div>\n  );\n}\n","/*=============================================================================\n Profile.tsx - User profile\n\n (C) 2020 SpacetimeQ INC.\n=============================================================================*/\nimport { useSelector } from 'react-redux';\nimport { TRootState } from 'app/store';\nimport { useAuthCtx } from 'app/AuthContext';\nimport {\n  currentUser,\n} from 'api/authAPI';\nimport {\n  createUser,\n  selectUserById,\n} from 'features/users/usersSlice';\nimport {\n  apiReq\n} from 'features/auth/authSlice';\nimport { useAppDispatch } from 'app/store';\nimport {\n  ButtonPurple,\n} from 'ui/ui';\nimport {\n  getPathD,\n} from 'utils/svg';\nimport { format, formatDistanceToNow } from 'date-fns';\n\nconst Register = () => {\n  const dispatch = useAppDispatch();\n  const user = useAuthCtx().user;\n  return (\n    <div className=\"mt-4 w-80 max-w-sm bg-white shadow-lg rounded-lg overflow-hidden\">\n      <div className=\"font-semibold text-lg text-center\">\n        <ButtonPurple className=\"w-60 m-2\" onClick={() => dispatch( createUser(user!) )}>\n          Register\n        </ButtonPurple>\n      </div>\n    </div>\n  );\n}\n\nconst timeUMTtoLocal = (umt: Undefinable<string>) => {\n  if (!umt)\n    return;\n  const date = new Date(umt);\n  return format(date, 'yyyy-MM-dd HH:mm:ss z eee') + ', '\n       + formatDistanceToNow(date) + ' ago';\n}\n\nexport default function ProfilePage() {\n  const cUser = currentUser();\n  const ux = useSelector((state: TRootState) => selectUserById(state, cUser ? cUser.uid : '100'));\n  if (!cUser) {\n    return null;\n  }\n  return (\n    <div className=\"h-screen overflow-hidden flex flex-col items-center justify-center\">\n\n      <div className=\"max-w-sm w-1/2 dark:bg-gray-300 bg-white shadow-lg rounded-lg overflow-hidden\">\n        <div className=\"dark:bg-gray-300 bg-white pb-12 w-full justify-center items-center overflow-hidden md:max-w-sm rounded-lg mx-auto\">\n          <div className=\"relative h-48\">\n            <img\n              className=\"absolute h-full w-full object-cover\"\n              src={(ux && ux.backURL) || \"shiba.jpg\"}\n              alt=\"background\"\n            />\n          </div>\n          <div className=\"relative shadow mx-auto h-24 w-24 -my-12 border-white rounded-full overflow-hidden border-4\">\n            <img\n              className=\"w-full h-full object-cover bg-gray-200\"\n              src={cUser.photoURL || \"icon-anonymous.png\"}\n              alt=\"avatar\"\n            />\n          </div>\n        </div>\n        <div className=\"font-semibold text-lg text-center\">\n          <DisplayName name={cUser.displayName} />\n        </div>\n        <div className=\"py-4 px-6\">\n          <div className=\"text-xs font-thin font-mono text-gray-800 text-center\">uid:{cUser.uid}</div>\n          <p className=\"py-2 text-lg text-gray-700 border-b border-gray-200\">{ux && ux.profile}</p>\n          <div className=\"flex items-center mt-4 text-gray-700\">\n            <svg className=\"h-6 w-6 mr-2 fill-current\" viewBox=\"0 0 512 512\">\n              <path d={getPathD(\"people_back\") + getPathD(\"people_front\")}/>\n            </svg>\n            {ux && ux.group}\n          </div>\n          <div className=\"flex items-center mt-4 text-gray-700\">\n            <svg className=\"h-6 w-6 mr-2 fill-current\" viewBox=\"0 0 512 512\">\n              <path d={getPathD(\"pin_location\")}/>\n            </svg>\n            {ux && ux.city}\n          </div>\n          <div className=\"flex items-center mt-4 text-gray-700\">\n            <svg className=\"h-6 w-6 mr-2 fill-current\" viewBox=\"0 0 512 512\">\n              <path d={getPathD(\"email_pro\")}/>\n            </svg>\n            {cUser.email} {cUser.emailVerified ? \"✅\" : <ButtonEmailVerificaiton />}\n          </div>\n          <div className=\"font-mono p-2 bg-gray-100\" style={{fontSize: '.6rem'}}>\n            <div className=\"bg-gray-600 text-gray-100 pl-1\">{Intl.DateTimeFormat().resolvedOptions().timeZone}</div>\n            <div className=\"bg-gray-300 text-red-700 pl-1\">{timeUMTtoLocal(cUser.metadata.creationTime)}</div>\n            <div className=\"bg-gray-100 text-indigo-500 pl-1\">{timeUMTtoLocal(cUser.metadata.lastSignInTime)}</div>\n          </div>\n          <ul className=\"mt-1 font-mono text-xs text-gray-400\">\n            {cUser.providerData.map((pd, i) =>\n              <ul key={i}>[Provider {i}] {pd?.providerId} / <DisplayName name={pd?.displayName} /></ul>\n            )}\n          </ul>\n        </div>\n      </div>\n      {!ux && <Register />}\n    </div>\n  );\n}\n\nconst ButtonEmailVerificaiton = () => {\n  const dispatch = useAppDispatch();\n  return (\n    <span className=\"font-mono text-xs text-red-400 ml-2\">\n      <button\n        type=\"button\"\n        className=\"rounded-lg border border-rose-400 px-2 hover:text-white hover:bg-rose-800\"\n        onClick={() => dispatch( apiReq({ command: 'sendEmailVerification' }) )}\n      >\n        ❌ Verify Email\n      </button>\n    </span>\n  );\n}\n\nconst DisplayName = ({ name }: { name: Maybe<string> }) =>\n  name\n    ? <span>{name}</span>\n    : <span className=\"italic text-red-400\">No Name</span>;\n","/*=============================================================================\n Setting.tsx - User settings\n\n (C) 2020 SpacetimeQ INC.\n=============================================================================*/\n\nexport default function SettingPage() {\n  return (\n    <div>\n      <h1>Under Construction...</h1>\n    </div>\n  );\n}\n","/*=============================================================================\n Layout.tsx - description\n\n (C) 2020 SpacetimeQ INC.\n=============================================================================*/\nimport {\n  BrowserRouter,\n  Switch,\n} from \"react-router-dom\";\nimport {\n  IAuthRouteProps,\n  ARoute,\n  AuthRedirectToFrom,\n} from 'ui/AuthRoute';\nimport { useAuthCtx } from 'app/AuthContext';\nimport Navbar    from './Navbar';\nimport AuthPage  from 'features/auth/AuthPage';\nimport Dashboard from 'features/dash/Dashboard';\nimport Calendar  from 'features/cal/Calendar';\nimport Timeline  from 'features/timeline/Timeline';\nimport Chat      from 'features/chat/Chat';\nimport Profile   from 'features/profile/ProfilePage';\nimport Setting   from 'features/setting/SettingPage';\n\nexport default function Layout() {\n  // react-router: component and render cannot be used at the same time\n  // SubRoutes not supported yet.\n  const Routes: Partial<IAuthRouteProps>[] =  [  // access level: 0 public, 1: login required\n    { path: \"/chat\",     children: <Chat />,        access: 1 },\n    { path: \"/calendar\", children: <Calendar />,    access: 0 },\n    { path: \"/timeline\", children: <Timeline />,    access: 0 },\n    { path: \"/auth\",     children: <AuthPage />,    access: 0 },\n    { path: \"/profile\",  children: <Profile />,     access: 1 },\n    { path: \"/setting\",  children: <Setting />,     access: 1 },\n    { path: \"/\",         children: <Dashboard />,   access: 0 },\n  ];\n  // const auth = useSelector(selectAuth);  // mystery: this call destroys auth reducer!\n  const user = useAuthCtx().user;\n  return (\n    <BrowserRouter>\n      <Navbar />\n      <AuthRedirectToFrom user={user} />\n      <Switch>\n        {\n        Routes.map((rt, i) => <ARoute key={i} authLv={user ? 1 : 0} {...rt} />)\n        }\n      </Switch>\n    </BrowserRouter>\n  );\n}\n","/*=============================================================================\n App.tsx - App main\n\n (C) 2020 SpacetimeQ INC.\n=============================================================================*/\nimport {\n  DarkThemeProvider,\n} from './darkThemeCtx';\nimport Layout from 'ui/layout/Layout';\nimport 'styles/App.scss';\n\ndocument.cookie = 'cross-site-cookie=stq; SameSite=None; Secure';\n\nfunction App() {\n  return (\n    <DarkThemeProvider>\n      <div className=\"App\">\n        <Layout />\n      </div>\n    </DarkThemeProvider>\n  );\n}\n\n/*\n      <AuthPage loginMode={!user} />\n      {user && <Profile />}\n      {user && user.emailVerified && <Content />}\n * A <Switch> looks through all its children <Route> elements and renders\n * the first one whose path matches the current URL. Use a <Switch> any time\n * you have multiple routes, but you want only one of them to render at a time.\n * */\n\nexport default App;\n\n/*\n    <script async defer crossOrigin=\"anonymous\" src=\"https://connect.facebook.net/en_US/sdk.js#xfbml=1&version=v7.0&appId=301405370454910&autoLogAppEvents=1\"></script>\n      <iframe src=\"https://www.facebook.com/plugins/video.php?href=https%3A%2F%2Fwww.facebook.com%2Fwsj%2Fvideos%2F276560983497022%2F&show_text=0&width=560\" width=\"560\" height=\"315\" title=\"WSJ\"></iframe>\n      <br/>\n  <iframe\n    title =\"instagram\"\n    src=\"https://www.instagram.com/p/B3aztQPFoTQ/embed\"\n    width=\"320\"\n    height=\"400\"\n    frameBorder=\"1\"\n    scrolling=\"no\"\n    allowTransparency={true}>\n  </iframe>\n  <iframe:w\n\n    title=\"youtube\"\n    width=\"560\"\n    height=\"315\"\n    src=\"https://www.youtube.com/embed/vsl3gBVO2k4\"\n    frameBorder=\"0\"\n    allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n    allowFullScreen>\n  </iframe>\n\n */\n\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'out/tailwind.o.css';  // generated from 'out/tailwind.tw.css'\nimport { AuthProvider } from 'app/AuthContext';\nimport App from 'app/App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { store }     from 'app/store';\nimport { Provider }  from 'react-redux';\n\n/*\nimport { userAdded } from 'features/users/usersSlice';\nimport { msgAdd }  from 'features/msgs/msgsSlice';\n\nstore.dispatch(userAdd({\n  id:    '10001',\n  name:  'testUser',\n  email: 'test@example.com',\n  photoURL: null,\n}));\nstore.dispatch(msgAdd({\n  id:   '101',\n  user: '10001',\n  date: '2020-11-30',\n  text: 'Experiment ... working',\n}));\n*/\n\nif (!process.env.NODE_ENV ||\n  process.env.NODE_ENV === 'production') {\n  console.log = function() {}  // suppress all console.log in production mode\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <AuthProvider>\n        <App />\n      </AuthProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}